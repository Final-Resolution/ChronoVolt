/**
 * @file SFRs.h
 * @author mangolu (mangolu81@gmail.com)
 * @brief N76E003所有特殊功能寄存器介绍
 * @version 1.0.0
 * @date 2019-04-30
 * 
 * @copyright Copyright (c) 2019 mangolu All righits reserved
 * 
 */
/********************************************************************************************************************************************************************************************************/
/************************* P0 – 端口 0 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  P0.7  |  P0.6  |  P0.5  |  P0.4  |  P0.3  |  P0.2  |  P0.1  |  P0.0  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：80H    复位值：1111 1111b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  P0[7:0]  |  端口 0
//        |           |  端口 0 是 8-bit 通用 I/O 端口
// -------------------------------------------------------------------------

/************************* SP – 堆栈指针 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                                SP[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：81H    复位值：0000 0111b
// 
// ----------------------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|--------------------------------------------------------------------
//   7:0  |  SP[7:0]  |  堆栈指针
//        |           |  堆栈指针存储的是RAM的地址，该地址是堆栈的起始地址。在执行PUSH 或 CALL
//        |           |  指令的时候，在数据被存储之前，堆栈指针递增。注意：SP的默认值是07H。因此
//        |           |  堆栈起始位置在08H。
// ----------------------------------------------------------------------------------------

/************************* DPL –数据指针低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               DPL[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：82H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-------------------------------------------------------------------
//   7:0  |  DPL[7:0]  |  数据指针低字节
//        |            |  这是16位数据指针的低字节， DPL 结合DPH作为16位的数据指针DPTR访问间接
//        |            |  地址RAM或编程内存地址。DPS (AUXR1.0) 位决定DPTR 或 DPTR1哪一个数据指
//        |            |  针被激活。
// ----------------------------------------------------------------------------------------

/************************* DPH –数据指针高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               DPH[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：83H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-------------------------------------------------------------------
//   7:0  |  DPH[7:0]  |  数据指针高字节
//        |            |  这是16位数据指针的高字节， DPH 结合DPL作为16位的数据指针DPTR访问间接
//        |            |  地址RAM或编程内存地址。DPS (AUXR1.0) 位决定DPTR 或 DPTR1哪一个数据指
//        |            |  针被激活。
// ----------------------------------------------------------------------------------------

/************************* RWK – 自唤醒定时器重装载数据寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               RWK[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：86H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-------------------------------------------------------------
//   7:0  |  RWK[7:0]  |  WKT 重载字节
//        |            |  用以保存WKT的8位重载值。注意如果预分频是1/1，RWK限制不能是FFH。
// ----------------------------------------------------------------------------------

/************************* PCON – 电源控制寄存器 *************************/
// --------------------------------------------------------------------------
// |   7    |    6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|---------|--------|--------|--------|--------|--------|--------|
// |  SMOD  |  SMOD0  |   -    |  POF   |  GF1   |  GF0   |   PD   |  IDL   |
// |--------|---------|--------|--------|--------|--------|--------|--------|
// |  R/W   |   R/W   |   -    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// --------------------------------------------------------------------------
// 地址：87H    复位值：未定
// 
// ------------------------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|----------------------------------------------------------------------
//    7   |   SMOD    |  串口0波特率加倍使能
//        |           |  串口0在模式2或用Timer1的溢出率做波特率发生器的模式1和模式3，设置该位，波
//        |           |  特率会加倍。
// -------|-----------|----------------------------------------------------------------------
//    6   |  SMOD0    |  串口0帧错误标志使能位
//        |           |  0 = 关闭帧错误检测功能。SCON.7访问SM0位
//        |           |  1 = 使能帧错误检测。SCON.7访问FE位
// -------|-----------|----------------------------------------------------------------------
//    4   |   POF     |  上电复位标志
//        |           |  当上电复位后该位置1，用以标示当前冷复位，上电复位完成。其它任何复位不会
//        |           |  影响该位，建议通过软件清0。
// -------|-----------|----------------------------------------------------------------------
//    3   |   GF1     |  通用标志 1
//        |           |  通用标志可由用户通过软件置位和清零
// -------|-----------|----------------------------------------------------------------------
//    2   |   GF0     |  通用标志 0 
//        |           |  通用标志可由用户通过软件置位和清零
// -------|-----------|----------------------------------------------------------------------
//    1   |   PD      |  掉电模式
//        |           |  设置该位使MCU进入掉电模式。在此模式下，CPU和外设时钟停止，程序计数器
//        |           |  （PC）挂起。此时为最小功耗。CPU从掉电模式下唤醒后，该位自动由硬件清零，
//        |           |  且在系统唤醒之前程序继续执行中断服务程序（ISR）。从ISR返回后，设备继续执
//        |           |  行系统进入掉电模式时所处的指令。
//        |           |  注如果IDL位和PD位同时置位，MCU进入掉电模式。从掉电模式退出后不会进入空
//        |           |  闲模式。
// -------|-----------|----------------------------------------------------------------------
//    0   |   IDL     |  空闲模式
//        |           |  设置该位使MCU进入空闲模式。在此模式下，CPU时钟停止，且程序计数器
//        |           |  （PC）挂起，但是所有外设继续工作。CPU从空闲模式唤醒后，该位自动由硬件清
//        |           |  零，且在系统唤醒之前程序继续执行中断服务程序（ISR）。从ISR返回后，设备继
//        |           |  续执行系统进入空闲模式时所处的指令。
// ------------------------------------------------------------------------------------------

/************************* TCON – 定时器 0 和 1 控制位 (可位寻址) *************************/
// -----------------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3         |   2    |   1         |   0    |
// |--------|--------|--------|--------|-------------|--------|-------------|--------|
// |  TF1   |  TR1   |  TF0   |  TR0   |  IE1        |  IT1   |  IE0        |  IT0   |
// |--------|--------|--------|--------|-------------|--------|-------------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R(level)   |  R/W   |  R(level)   |  R/W   |
// |        |        |        |        |  R/W(edge)  |        |  R/W(edge)  |        |
// -----------------------------------------------------------------------------------
// 地址：88H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|------------------------------------------------------------------------
//    7   |    TF1    |  定时器 1 溢出标志
//        |           |  在定时器1溢出时该位置1。当程序响应定时器1中断执行相应的中断服务程序时，
//        |           |  该位自动清0。软件也可对其写1或写0
// --------------------------------------------------------------------------------------------
//    6   |    TR1    |  定时器 1 启动控制
//        |           |  0 = 定时器1 中止. 清该位将中止定时器1并且当前计数值将保存到TH1和TL1中
//        |           |  1 = 使能定时器1 
// --------------------------------------------------------------------------------------------
//    5   |    TF0    |  定时器 0 溢出标志
//        |           |  在定时器0溢出时该位置1。当程序响应定时器0中断执行相应的中断服务程序时，
//        |           |  该位自动清0。软件也可对其写1或写0
// --------------------------------------------------------------------------------------------
//    4   |    TR0    |  定时器 0 启动控制
//        |           |  0 = 定时器0 中止. 清该位将中止定时器0并且当前计数值将保存到TH0和TL0中
//        |           |  1 = 使能定时器0
// --------------------------------------------------------------------------------------------
//    3   |    IE1    |  外部中断1边沿标志
//        |           |  当检测到边沿/电平类型时，该标志由硬件置位。
//        |           |  如果 IT1 = 1(下降沿触发), 该位将保持置1直到软件清零或在外部中断1服务程序中
//        |           |  硬件清零 
//        |           |  如果 IT1 = 0(低电平触发), 该标志是INT1#输入信号逻辑电平的反转。软件不可控制
// --------------------------------------------------------------------------------------------
//    2   |    IT1    |  外部中断1类型选择 
//        |           |  该位选择INT1#的中断触发类型是下降沿还是低电平。
//        |           |  0 = INT1#为低电平触发
//        |           |  1 = INT1#为下降沿触发
// --------------------------------------------------------------------------------------------
//    1   |    IE0    |  外部中断0边沿标志
//        |           |  当检测到边沿/电平类型时，该标志由硬件置位。
//        |           |  如果 IT0 = 1(下降沿触发), 该位将保持置1直到软件清零或在外部中断1服务程序中
//        |           |  硬件清零 
//        |           |  如果 IT0 = 0(低电平触发), 该标志是INT0#输入信号逻辑电平的反转。软件不可控制
// --------------------------------------------------------------------------------------------
//    0   |    IT1    |  外部中断0类型选择 
//        |           |  该位选择INT0#的中断触发类型是下降沿还是低电平。
//        |           |  0 = INT0#为低电平触发
//        |           |  1 = INT0#为下降沿触发
// --------------------------------------------------------------------------------------------

/************************* TMOD –定时器 0 及 1 模式寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  GATE  |  C/T#  |   M1   |   M0   |  GATE  |  C/T#  |   M1   |   M0   |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：89H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |   GATE    |  定时器1门选择
//        |           |  0 = 无论INT1#的逻辑为何，当TR1为1时，开始计数
//        |           |  1 = 仅当INT1#为1时， TR1同时为1，才开始计数
// -------|-----------|-----------------------------------------------------
//    6   |   C/T#    |  定时器 1 计数器/定时器选择
//        |           |  0 = 定时器1 随内部时钟而递增
//        |           |  1 = 定时器1 随外部引脚T1的下降沿递增
// -------|-----------|-----------------------------------------------------
//    5   |    M1     |  定时器1模式选择 
// -------|-----------|  M1  M0  定时器1模式
//    4   |    M0     |  0  0  模式 0: 13位定时器/计数器
//        |           |  0  1  模式 1: 16位定时器/计数器
//        |           |  1  0  模式 2: 8位定时器/计数器，带自动TH1重载模式
//        |           |  1  1  模式 3: 定时器1停止
// -------|-----------|-----------------------------------------------------
//    3   |   GATE    |  定时器0门选择
//        |           |  0 = 无论INT0#的逻辑为何，当TR1为1时，开始计数
//        |           |  1 = 仅当INT0#为1时， TR1同时为1，才开始计数
// -------|-----------|-----------------------------------------------------
//    2   |   C/T#    |  定时器 0 计数器/定时器选择
//        |           |  0 = 定时器0 随内部时钟而递增
//        |           |  1 = 定时器0 随外部引脚T1的下降沿递增
// -------|-----------|-----------------------------------------------------
//    1   |    M1     |  定时器0模式选择 
// -------|-----------|  M1  M0  定时器0模式
//    0   |    M0     |  0  0  模式 0: 13位定时器/计数器
//        |           |  0  1  模式 1: 16位定时器/计数器
//        |           |  1  0  模式 2: 8位定时器/计数器，带自动TH0重载模式
//        |           |  1  1  模式 3: TL0 作为一个8位定时器/计数器，TH0 作为
//        |           |                一个8位的定时器
// -------------------------------------------------------------------------

/************************* TL0 – 定时器0 低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               TL0[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：8AH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  TL0[7:0]  |  定时器0低字节
//        |            |  寄存器TL0是定时器0的16位数值的低字节
// --------------------------------------------------------------------------

/************************* TL1 – 定时器1 低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               TL1[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：8BH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  TL1[7:0]  |  定时器1低字节
//        |            |  寄存器TL1是定时器1的16位数值的低字节
// --------------------------------------------------------------------------

/************************* TH0 – 定时器0高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               TH0[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：8CH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  TH0[7:0]  |  定时器0高字节
//        |            |  寄存器TH0是定时器0的16位数值的高字节
// --------------------------------------------------------------------------

/************************* TH1 – 定时器 1 高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                               TH1[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：8DH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  TH1[7:0]  |  定时器1高字节
//        |            |  寄存器TH1是定时器0的16位数值的高字节
// --------------------------------------------------------------------------

/************************* CKCON – 时钟控制寄存器 *************************/
// ----------------------------------------------------------------------------
// |   7    |   6      |   5    |   4    |   3    |   2    |   1     |   0    |
// |--------|----------|--------|--------|--------|--------|---------|--------|
// |   -    |  PWMCKS  |   -    |  T1M   |  T0M   |   -    |  CLOEN  |   -    |
// |--------|----------|--------|--------|--------|--------|---------|--------|
// |   -    |  R/W     |   -    |  R/W   |  R/W   |   -    |  R/W    |   -    |
// ----------------------------------------------------------------------------
// 地址：8EH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|------------------------------------------------------
//    6   |  PWMCKS   |  PWM 时钟源选择
//        |           |  0 = PWM时钟源为系统时钟FSYS
//        |           |  1 = PWM时钟源为定时器1的溢出
// --------------------------------------------------------------------------
//    4   |   T1M     |  定时器 1 时钟选择
//        |           |  0 = 定时器 1 的时钟源选择为1/12系统时钟。与标准8051兼容
//        |           |  1 = 定时器 1 的时钟源选择为系统时钟
// --------------------------------------------------------------------------
//    3   |   T0M     |  定时器 0  时钟选择
//        |           |  0 = 定时器 0 的时钟源选择为1/12系统时钟。与标准8051兼容
//        |           |  1 = 定时器 0 的时钟源选择为系统时钟
// --------------------------------------------------------------------------
//    1   |  CLOEN    |  系统时钟输出使能
//        |           |  0 = 禁用系统时钟输出
//        |           |  1 = 使能系统时钟输出，从CLO (P1.1)输出
// --------------------------------------------------------------------------

/************************* WKCON – 自唤醒定时器控制寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------------------------|
// |   -    |   -    |   -    |  WKTF  |  WKTR  |        WKPS[2:0]         |
// |--------|--------|--------|--------|--------|--------------------------|
// |   -    |   -    |   -    |  R/W   |  R/W   |           R/W            |
// -------------------------------------------------------------------------
// 地址：8FH    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|----------------------------------------------------------------
//    4   |   WKTF        |  WKT 溢出标志
//        |               |  当WKT溢出，该位置位。如果WKT中断和全局中断使能，置位该位会使CPU执行
//        |               |  WKT中断服务程序。该位不会被硬件自动清零，应该通过软件清零。
// ----------------------------------------------------------------------------------------
//    4   |   WKTR        |  WKT 运行控制
//        |               |  0 = WKT 停止
//        |               |  1 = WKT 开始运行
//        |               |  注意重载寄存器RWK仅在WKT停止的时候可以写入（WKTR位为0）。否则结果
//        |               |  是不可预知的。
// ----------------------------------------------------------------------------------------
//    4   |   WKPS[2:0]   |  WKT 预分频
//        |               |  这些位决定WKT时钟的预分频
//        |               |  000 = 1/1
//        |               |  001 = 1/4
//        |               |  010 = 1/16
//        |               |  011 = 1/64
//        |               |  100 = 1/256
//        |               |  101 = 1/512
//        |               |  110 = 1/1024
//        |               |  111 = 1/2048
// ----------------------------------------------------------------------------------------

/************************* P1 – 端口 1 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  P1.7  |  P1.6  |  P1.5  |  P1.4  |  P1.3  |  P1.2  |  P1.1  |  P1.0  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：90H    复位值：1111 1111b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  P1[7:0]  |  端口 1
//        |           |  端口 1 是 8-bit 通用 I/O 端口
// -------------------------------------------------------------------------

/************************* SFRS – SFR 页选择 (TA 保护) *************************/
// ----------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0       |
// |--------|--------|--------|--------|--------|--------|--------|-----------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  SFRPAGE  |
// |--------|--------|--------|--------|--------|--------|--------|-----------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |    R/W    |
// ----------------------------------------------------------------------------
// 地址：91H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    0   |  SFRPAGE  |  SFR 页选择
//        |           |  0 = 指令访问SFR 页 0
//        |           |  1 = 指令访问SFR 页 1
// -------------------------------------------------------------------------

/************************* CAPCON0 – 输入捕获控制寄存器0 *************************/
// ----------------------------------------------------------------------------------
// |   7    |    6     |    5     |    4     |   3    |    2    |    1    |    0    |
// |--------|----------|----------|----------|--------|---------|---------|---------|
// |   -    |  CAPEN2  |  CAPEN1  |  CAPEN0  |   -    |  CAPF2  |  CAPF1  |  CAPF0  |
// |--------|----------|----------|----------|--------|---------|---------|---------|
// |   -    |   R/W    |   R/W    |   R/W    |   -    |  R/W    |  R/W    |  R/W    |
// ----------------------------------------------------------------------------------
// 地址：92H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    6   |  CAPEN2   |  输入捕获通道2 使能位
//        |           |  0 = 关闭输入捕获通道2
//        |           |  1 = 打开输入捕获通道2
// -------|-----------|-----------------------------------------------------
//    5   |  CAPEN1   |  输入捕获通道1 使能位
//        |           |  0 = 关闭输入捕获通道2
//        |           |  1 = 打开输入捕获通道2
// -------|-----------|-----------------------------------------------------
//    4   |  CAPEN0   |  输入捕获通道0 使能位
//        |           |  0 = 关闭输入捕获通道2
//        |           |  1 = 打开输入捕获通道2
// -------|-----------|-----------------------------------------------------
//    2   |  CAPF2    |  输入捕获通道2 标志位
//        |           |  如果输入捕获2边沿发生，该位由硬件置位，由软件清零
// -------|-----------|-----------------------------------------------------
//    1   |  CAPF1    |  输入捕获通道1 标志位
//        |           |  如果输入捕获1边沿发生，该位由硬件置位，由软件清零
// -------|-----------|-----------------------------------------------------
//    0   |  CAPF1    |  输入捕获通道0 标志位
//        |           |  如果输入捕获0边沿发生，该位由硬件置位，由软件清零
// -------------------------------------------------------------------------

/************************* CAPCON1 – 输入捕获控制寄存器1 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|-----------------|-----------------|-----------------|
// |   -    |   -    |   CAP2LS[1:0]   |   CAP1LS[1:0]   |   CAP0LS[1:0]   |
// |--------|--------|-----------------|-----------------|-----------------|
// |   -    |   -    |      R/W        |      R/W        |      R/W        |
// -------------------------------------------------------------------------
// 地址：93H    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|-----------------------------------------------------
//   5:4  |  CAP2LS[1:0]  |  输入捕获通道2条件选择
//        |               |  00 = 下降沿
//        |               |  01 = 上升沿
//        |               |  10 = 上升沿或下降沿
//        |               |  11 = 保留
// -------|---------------|-----------------------------------------------------
//   3:2  |  CAP1LS[1:0]  |  输入捕获通道1条件选择
//        |               |  00 = 下降沿
//        |               |  01 = 上升沿
//        |               |  10 = 上升沿或下降沿
//        |               |  11 = 保留
// -------|---------------|-----------------------------------------------------
//   1:0  |  CAP0LS[1:0]  |  输入捕获通道0条件选择
//        |               |  00 = 下降沿
//        |               |  01 = 上升沿
//        |               |  10 = 上升沿或下降沿
//        |               |  11 = 保留
// -----------------------------------------------------------------------------

/************************* CAPCON2 – 输入捕获控制寄存器2 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |  ENF2  |  ENF1  |  ENF0  |   -    |   -    |   -    |   -    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |  R/W   |  R/W   |  R/W   |   -    |   -    |   -    |   -    |
// -------------------------------------------------------------------------
// 地址：94H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    6   |   ENF2    |  输入捕获通道2 噪声滤波使能位
//        |           |  0 = 关闭输入捕获通道2的噪声滤波
//        |           |  1 = 打开输入捕获通道2的噪声滤波
// -------------------------------------------------------------------------
//    5   |   ENF2    |  输入捕获通道1 噪声滤波使能位
//        |           |  0 = 关闭输入捕获通道2的噪声滤波
//        |           |  1 = 打开输入捕获通道2的噪声滤波
// -------------------------------------------------------------------------
//    4   |   ENF2    |  输入捕获通道0 噪声滤波使能位
//        |           |  0 = 关闭输入捕获通道2的噪声滤波
//        |           |  1 = 打开输入捕获通道2的噪声滤波
// -------------------------------------------------------------------------

/************************* CKDIV – 时钟除频 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             CKDIV[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：95H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  CKDIV[7:0]  |  时钟除频
//        |              |  下面是系统频率FSYS计算公式
//        |              |  当 CKDIV = 00H时，FSYS = FOSC
//        |              |  当 CKDIV = 01H - FFH时，FSYS = FOSC / (2 * CKDIV)
// ----------------------------------------------------------------------------

/************************* CKSWT – 时钟开关 (TA 保护) *************************/
// -------------------------------------------------------------------------------
// |   7    |   6    |    5     |    4     |    3     |   2    |   1    |   0    |
// |--------|--------|----------|----------|----------|-----------------|--------|
// |   -    |   -    |  HIRCST  |  LIRCST  |  ECLKST  |    OSC[1:0]     |   -    |
// |--------|--------|----------|----------|----------|-----------------|--------|
// |   -    |   -    |    R     |    R     |    R     |       W         |   -    |
// -------------------------------------------------------------------------------
// 地址：96H    复位值：0011 0000b
// 
// ------------------------------------------------------------------------------
//   Bit     |   Name      |  Description
// ----------|-------------|-----------------------------------------------------
//    5      |  HIRCST     |  16 MHz高速内部振荡器状态
//           |             |  0 = HIRC不稳定或没有开启
//           |             |  1 = HIRC开启并稳定
// ----------|-------------|-----------------------------------------------------
//    4      |  LIRCST     |  10 KHz低速内部振荡器状态
//           |             |  0 = LIRC不稳定或没有开启
//           |             |  1 = LIRC开启并稳定
// ----------|-------------|-----------------------------------------------------
//    3      |  ECLKST     |  外部时钟输入状态
//           |             |  0 = ECLK不稳定或没有开启
//           |             |  1 = ECLK开启并稳定
// ----------|-------------|-----------------------------------------------------
//    2:1    |  OSC[1:0]   |  振荡器选择位
//           |             |  该位是用来选择系统时钟源
//           |             |  00 = 内部16MHz振荡器
//           |             |  01 = 外部时钟控制，通过EXTEN[1:0] (CKEN[7:6]) 设置
//           |             |  10 = 内部10kHz振荡器
//           |             |  11 = 保留位
//           |             |  注意该位段只写，读回来的值可能与当前时钟源不一致
// ------------------------------------------------------------------------------

/************************* CKEN – 时钟使能寄存器(TA 保护) *************************/
// -------------------------------------------------------------------------------
// |   7    |   6    |    5     |    4     |   3    |   2    |   1    |    0     |
// |-----------------|----------|----------|--------|--------|--------|----------|
// |   EXTEN[1:0]    |  HIRCEN  |  LIRCEN  |   -    |   -    |   -    |  CKSWTF  |
// |-----------------|----------|----------|--------|--------|--------|----------|
// |      R/W        |   R/W    |    R/W   |   -    |   -    |   -    |   R/W    |
// -------------------------------------------------------------------------------
// 地址97H    复位值：0011 0000b
// 
// -----------------------------------------------------------------------------------------
//   Bit  |    Name      |  Description
// -------|--------------|------------------------------------------------------------------
//   7:6  |  EXTEN[1:0]  |  外部时钟源使能
//        |              |  11 =使能外部时钟 ，通过XIN输入外部时钟信号
//        |              |  其它 = 禁止外部时钟 。P30作为普通I/O使用
// -------|--------------|------------------------------------------------------------------
//    5   |    HIRCEN    |  HIRC16MHz 使能位
//        |              |  0 = 关闭 HIRC
//        |              |  1 = 使能 HIRC
//        |              |  注意一旦设置IAPEN (CHPCON.0)位开启IAP功能，HIRC将会自动使能，硬件也
//        |              |  会设置HIRCEN和HIRCST位。IAPEN被清除后，HIRCEN和EHRCST位会恢复
//        |              |  为原始值
// -------|--------------|------------------------------------------------------------------
//    4   |    LIRCEN    |  LIRC10KHz 使能位
//        |              |  0 = 关闭 LIRC
//        |              |  1 = 使能 LIRC
// -------|--------------|------------------------------------------------------------------
//    0   |    CKSWTF    |  时钟切换错误标志位
//        |              |  0 = 先前的系统时钟源切换成功
//        |              |  1 = 用户试图将先前的系统时钟源切换到没有开启或是不稳定的时钟源。如果待
//        |              |      切换的时钟不稳定该位将一直保持为1，直到时钟源稳定并切换成功为止。
// -----------------------------------------------------------------------------------------

/************************* SCON – 串口0控制寄存器 (可位寻址) *************************/
// ---------------------------------------------------------------------------
// |    7     |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |----------|--------|--------|--------|--------|--------|--------|--------|
// |  SM0/FE  |  SM1   |  SM2   |  REN   |  TB8   |  RB8   |   TI   |   RI   |
// |----------|--------|--------|--------|--------|--------|--------|--------|
// |   R/W    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// ---------------------------------------------------------------------------
// 地址：98H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |  SM0/FE   |  SMOD0 (PCON.6) = 0: 
// -------|-----------|
//    6   |   SM1     |  SMOD0 (PCON.6) = 1: 
//        |           |  SM0/FE 位用作帧错误 (FE) 状态标志。 通过软件清0  
//        |           |      0 = 没有帧错误 (FE)  
//        |           |      1 = 检测到帧错误 (FE) 
// -------|-----------|-----------------------------------------------------
//    5   |   SM2     |  串口0处理通讯模式选择
//        |           |  该位功能取决于串口0模式
//        |           |  模式0:  
//        |           |      该位选择波特率FSYS /12 或 FSYS /2 
//        |           |      0 = 时钟运行在F SYS /12 波特率，与标准8051兼容
//        |           |      1 = 时钟运行在F SYS /2 波特率，获得更高传输速度
//        |           |  模式1:  
//        |           |      该位检查有效停止位 
//        |           |      0 = 接收有效不管停止位是否有逻辑电平
//        |           |      1 = 当接收到的数据帧停止位为1，且接收地址与本机
//        |           |          地址匹配或接收到的为广播地址时，接收数据有效
//        |           |  模式2 或 3:  
//        |           |      对于多机通信 
//        |           |      0 = 接收有效不管第9位是否有逻辑电平
//        |           |      1 = 当接收到的数据帧第9位为1，且接收地址与本机地
//        |           |          址匹配或接收到的为广播地址时，接收数据有效
// -------|-----------|-----------------------------------------------------
//    4   |   REN     |  串口0接收使能
//        |           |  0 = 关闭串口0接收功能
//        |           |  1 = 打开串口0在模式1，2或3模式下的接收功能。在模式0下，  
//        |           |      当REN=1并且RI=0时接受开始
// -------|-----------|-----------------------------------------------------
//    3   |   TB8     |  串口0第9位发送位
//        |           |  串口0在模式2和3中要被发送的第九位数据。在模式0和1中，
//        |           |  不支持该功能  
// -------|-----------|-----------------------------------------------------
//    2   |   RB8     |  串口0第9位接收位
//        |           |  串口0在模式2和3中接收到的第九位数据。模式1下，若SM2=0
//        |           |  则RB8是接收到的停止位。模式0下该位无意义  
// -------|-----------|-----------------------------------------------------
//    1   |   TI      |  串口0发送中断标志位
//        |           |  发送中断标志：模式0下该标志由硬件在发送完8位数据后置1，
//        |           |  而在其它模式下在串行发送到停止位的开始时置位。当该位中  
//        |           |  断使能，发生中断后会转至中断子程序。该位必须由软件来清除
// -------|-----------|-----------------------------------------------------
//    0   |   RI      |  串口0接收中断标志
//        |           |  模式0下该标志由硬件置位。在模式0中，接收到第8位；模式1，
//        |           |  2或3中接收到停止位(stop bit)；使该位置位。当SM2被限制  
//        |           |  （SM2置1）的情况例外。当串口0中断使能，该位置位会转跳到
//        |           |  中断服务子程序运行。该位必须由软件来清除
// -------------------------------------------------------------------------

/************************* SBUF – 串口0数据缓存寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             SBUF[7:0]                                 |
// |-----------------------------------------------------------------------|
// |                                  R/W                                  |
// -------------------------------------------------------------------------
// 地址：99H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  SBUF[7:0]  |  串口0数据缓存
//        |             |  串口0接收或发送的数据都放在这个寄存器中。实际上该地址上
//        |             |  有2个独立的8位寄存器。一个用于接收数据，一个用于发送数据。
//        |             |  对它进行读操作将会接收串行数据，对它进行写操作则发送串行
//        |             |  数据。每次向SBUF写入一字节数据，启动一次发送
// ---------------------------------------------------------------------------

/************************* SBUF_1 – 串口1数据缓存寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  P0.7  |  P0.6  |  P0.5  |  P0.4  |  P0.3  |  P0.2  |  P0.1  |  P0.0  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：9AH    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|-----------------------------------------------------
//   7:0  |  SBUF_1[7:0]  |  串口1数据缓存
//        |               |  串口1接收或发送的数据都放在这个寄存器中。实际上该地址上
//        |               |  有2个独立的8位寄存器。一个用于接收数据，一个用于发送数据。
//        |               |  对它进行读操作将会接收串行数据，对它进行写操作则发送串行
//        |               |  数据。每次向SBUF_1写入一字节数据，启动一次发送
// -----------------------------------------------------------------------------

/************************* EIE – 扩展中断使能寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  ET2   |  ESPI  |  EFB   |  EWDT  |  EPWM  |  ECAP  |  EPI   |  EI2C  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：9BH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |    ET2    |  定时器2中断使能位
//        |           |  0 = 禁用定时器2中断
//        |           |  1 = 当TF2 (T2CON.7)为1 产生中断
// -------|-----------|-----------------------------------------------------
//    6   |    ESPI   |  SPI 中断使能位
//        |           |  0 = 禁用SPI 中断
//        |           |  1 = 使能由SPIF (SPSR.7), SPIOVF (SPSR.5), 或 MODF 
//        |           |      (SPSR.4)产生中断
// -------|-----------|-----------------------------------------------------
//    5   |    EFB    |  PWM故障刹车中断使能位
//        |           |  0 = 禁用PWM故障刹车中断
//        |           |  1 = 当FBF (FBD.7) 为1产生中断
// -------|-----------|-----------------------------------------------------
//    4   |    EWDT   |  使能WDT中断
//        |           |  0 = 禁用WDT中断
//        |           |  1 = 当WDTF (WDCON.5)为1产生中断
// -------|-----------|-----------------------------------------------------
//    3   |    EPWM   |  PWM中断使能位
//        |           |  0 = 禁用PWM中断
//        |           |  1 = 当PWMF (PWMCON0.5) 为1产生中断
// -------|-----------|-----------------------------------------------------
//    2   |    ECAP   |  输入捕获中断使能位
//        |           |  0 = 禁用输入捕获中断
//        |           |  1 = 使能由CAPF[2:0] (CAPCON0[2:0])产生中断
// -------|-----------|-----------------------------------------------------
//    1   |    EPI    |  引脚中断使能位
//        |           |  0 = 禁用引脚中断
//        |           |  1 =使能由PIF寄存器任意一个标志位产生中断
// -------|-----------|-----------------------------------------------------
//    0   |    EI2C   |  I2C中断使能位
//        |           |  0 = 禁用I2C中断
//        |           |  1 = 使能由SI (I2CON.3) 或 I2TOF (I2TOC.0)产生中断
// -------------------------------------------------------------------------

/************************* EIE1 – 扩展中断使能寄存器1 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |   -    |   -    |   -    |   -    |  EWKT  |  ET3   |  ES_1  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |   -    |   -    |   -    |   -    |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：9CH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    2   |   EWKT    |  WKT中断使能位
//        |           |  0 = 禁用WKT中断
//        |           |  1 = 当WKTF (WKCON.4)为1产生中断
// -------|-----------|-----------------------------------------------------
//    1   |   ET3     |  定时器3中断使能位
//        |           |  0 = 禁用定时器3中断
//        |           |  1 = 当TF3 (T3CON.4)为1产生中断
// -------|-----------|-----------------------------------------------------
//    0   |   ES_1    |  串口1中断使能位
//        |           |  0 = 禁用串口1中断
//        |           |  1 = 当 TI_1 (SCON_1.1) 或 RI_1 (SCON_1.0)为1产生中断
// -------------------------------------------------------------------------

/************************* CHPCON – 芯片控制寄存器 (TA保护) *************************/
// ----------------------------------------------------------------------------
// |   7     |   6     |   5    |   4    |   3    |   2    |   1    |   0     |
// |---------|---------|--------|--------|--------|--------|--------|---------|
// |  SWRST  |  IAPFF  |   -    |   -    |   -    |   -    |   BS   |  IAPEN  |
// |---------|---------|--------|--------|--------|--------|--------|---------|
// |   R     |  R/W    |   -    |   -    |   -    |   -    |  R/W   |  R/W    |
// ----------------------------------------------------------------------------
// 地址：9FH    复位值：未定
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-------------------------------------------------------
//    7   |   SWRST   |  
//        |           |  
// -------|-----------|-------------------------------------------------------
//    6   |   IAPFF   |  IAP 错误标志
//        |           |  满足以下任意条件，硬件将在IAPGO(ISPTRG.0)置位后置位该位：
//        |           |  (1) 访问地址超过其大小的区域 
//        |           |  (2) IAPCN 命令无效
//        |           |  (3) IAP擦除或编程更新没有使能的区域
//        |           |  (4) 当BOIAP(CONFIG2.5)为1、 BODEN (BODCON0.7)为1以及
//        |           |      BORST(BODCON0.2) 为0时，擦除或编程工作在V BOD 下。
//        |           |  该位应该由软件清零
// -------|-----------|-------------------------------------------------------
//    1   |    BS     |  启动选择
//        |           |  定义复位后MCU由哪块启动
//        |           |  0 = 由APROM启动
//        |           |  1 = 由LDROM启动
// -------|-----------|-------------------------------------------------------
//    0   |   IAPEN   |  IAP 使能
//        |           |  0 = 禁用IAP功能
//        |           |  1 = 使能IAP功能
//        |           |  一旦使能IAP功能，HIRC将会被打开作为时序控制。清IAPEN应该
//        |           |  在IAP操作最后一条指令，这样可以停止内部振荡器以减少功耗
// ---------------------------------------------------------------------------

/************************* P2 – 端口 2 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   0    |   0    |   0    |   0    |   0    |   0    |   0    |  P2.0  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   R    |   R    |   R    |   R    |   R    |   R    |   R    |   R    |
// -------------------------------------------------------------------------
// 地址：A0H    复位值：0000 000Xb
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:1  |    0      |  保留位
//        |           |  读取始终为0
// -------|-----------|-----------------------------------------------------
//    0   |   2.0     |  端口 2 第 0 位
//        |           |  当RPD (CONFIG0.2)=0，P2.0为输入高阻管脚。不配置RPD， 
//        |           |  P2.0读取始终为0 
// -------------------------------------------------------------------------

/************************* AUXR1 – 辅助功能寄存器1 *************************/
// --------------------------------------------------------------------------------
// |   7    |   6       |   5     |   4    |   3    |   2       |   1    |   0    |
// |--------|-----------|---------|--------|--------|-----------|--------|--------|
// |  SWRF  |  RSTPINF  |  HardF  |   -    |  GF2   |  UART0PX  |   0    |  DPS   |
// |--------|-----------|---------|--------|--------|-----------|--------|--------|
// |  R/W   |  R/W      |  R/W    |   -    |  R/W   |  R/W      |   R    |  R/W   |
// --------------------------------------------------------------------------------
// 地址：A2H    复位值：未定
// 
// ------------------------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-------------------------------------------------------------------
//    7   |   SWRF       |  软件复位标志位
//        |              |  当MCU发生软件复位后，该位硬件置1。建议软件清0。
// -------|--------------|-------------------------------------------------------------------
//    6   |   RSTPINF    |  外部复位标志位
//        |              |  当MCU发生外部复位脚复位，该位将被硬件置1，建议复位发生后软件清0。
// -------|--------------|-------------------------------------------------------------------
//    5   |   HardF      |  硬件错误复位标志
//        |              |  一旦程序计数器（PC）的值超过flash的大小，MCU将会复位并且该位通过
//        |              |  硬件置位。建议通过软件清除该位。
//        |              |  注意：如果MCU运行在OCD调试模式并且OCDEN = 0，硬件错误复位将会被禁止。
// -------|--------------|-------------------------------------------------------------------
//    3   |   GF2        |  通用标志位 2
//        |              |  可通过软件置1或清除
// -------|--------------|-------------------------------------------------------------------
//    2   |   UART0PX    |  串口0管脚位置配置
//        |              |  0 = RXD 为 P0.7 ， TXD 为 P0.6 （默认值）。
//        |              |  1 = 交换RXD 为 P0.6 ， TXD 为 P0.7。
//        |              |  注：更改此位后TXD及RXD的配置更改立即生效。软件需确保切换过程中没有进行
//        |              |  串口传输，否则可能引发无法预测的结果。
// -------|--------------|-------------------------------------------------------------------
//    1   |    0         |  保留位
//        |              |  该为始终为0 
// -------|--------------|-------------------------------------------------------------------
//    0   |   DPS        |  数据指针选择
//        |              |  0 = 数据指针0 (DPTR)默认有效
//        |              |  1 = 数据指针1 (DPTR1)有效
//        |              |  当通过 DPS 切换当前有效DPTR后，之前有效DPTR寄存器内的值保持不变。
// ------------------------------------------------------------------------------------------

/************************* BODCON0 – 欠压检测控制寄存器0 (TA 保护) *************************/
// -----------------------------------------------------------------------------------
// |   7        |   6    |   5    |   4    |    3     |     2      |   1    |   0    |
// |------------|--------|-----------------|----------|------------|--------|--------|
// |  BODEN[1]  |   -    |   BOV[1:0][1]   |  BOF[2]  |  BORST[1]  |  BORF  |  BOS   |
// |------------|--------|-----------------|----------|------------|--------|--------|
// |  R/W       |   -    |       R/W       |   R/W    |    R/W     |  R/W   |   R    |
// -----------------------------------------------------------------------------------
// 地址：A3H    复位值：未定
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//    7   |   BODEN      |  欠压检测使能
//        |              |  0 = 禁用欠压检测电路
//        |              |  1 = 使能欠压检测电路
//        |              |  注意在开启该功能后需要2到3个LIRC时钟BOD才能正常工作
// -------|--------------|-----------------------------------------------------
//   5:4  |   BOV[1:0]   |  欠压侦测电压选择位
//        |              |  11 = VBOD  生效电压 2.2V
//        |              |  10 = VBOD  生效电压 2.7V
//        |              |  01 = VBOD  生效电压 3.7V
//        |              |  00 = VBOD  生效电压 4.4V
// -------|--------------|-----------------------------------------------------
//    3   |    BOF       |  欠压中断标志
//        |              |  当VDD 下降到VBOD 以下或VDD 上升到VBOD 以上时，该标志由
//        |              |  硬件设置为逻辑1。如果EBOD (EIE.2)和EA (IE.7) 都置位，
//        |              |  将请求欠压检测中断。该位必须由软件清零。
// -------|--------------|-----------------------------------------------------
//    2   |   BORST      |  欠压检测复位使能
//        |              |  该位决定在电源电压跌到以V BOD 下时是否产生欠压检测复位
//        |              |  0 = 禁用欠压检测复位
//        |              |  1 = 使能欠压检测复位
// -------|--------------|-----------------------------------------------------
//    1   |   BORF       |  欠压复位标志
//        |              |  当MCU发生欠压复位时，该位被硬件值1。建议通过软件清除该位。
// -------|--------------|-----------------------------------------------------
//    0   |    BOS       |  欠压状态标志
//        |              |  在BOD电路开启时，该位反应VDD 与VBOD 比较情况。BOD电路
//        |              |  关闭时保持为0。
//        |              |  0 = VDD 电压大于VBOD 或是BOD电路关闭
//        |              |  1 = VDD 电压小于VBOD
//        |              |  注该位为只读位
// ----------------------------------------------------------------------------
// [1]所有复位后BODEN、 BOV[1:0]和 BORST初始化的值是直接通过加载CONFIG2 位 7、 位 6~ 4 
//     和 位 2决定的
// [2] BOF复位后的值依据CONFIG2的设置和VDD 的电平。

/************************* IAPTRG – IAP 触发 (TA 保护) *************************/
// --------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0     |
// |--------|--------|--------|--------|--------|--------|--------|---------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  IAPGO  |
// |--------|--------|--------|--------|--------|--------|--------|---------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |   W     |
// --------------------------------------------------------------------------
// 地址：A4H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    0   |   IAPGO   |  IAP 执行
//        |           |  设置该位为1开始执行IAP。该指令后，CPU保持程序计数器(PC)
//        |           |   ，IAP硬件自动管理控制该过程。IAP完成后，程序计数器继续
//        |           |  执行下一个指令。IAPGO位自动清零，保持为0。
//        |           |  在触发IAP动作前，如果中断打开应该临时关闭因为硬件限制。
// -------------------------------------------------------------------------

/************************* IAPUEN – IAP更新使能(TA 保护) *************************/
// ----------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2     |   1     |   0     |
// |--------|--------|--------|--------|--------|---------|---------|---------|
// |   -    |   -    |   -    |   -    |   -    |  CFUEN  |  LDUEN  |  APUEN  |
// |--------|--------|--------|--------|--------|---------|---------|---------|
// |   -    |   -    |   -    |   -    |   -    |  R/W    |  R/W    |  R/W    |
// ----------------------------------------------------------------------------
// 地址：A5H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    2   |   CFUEN   |  CONFIG更新使能
//        |           |  0 = 禁用IAP擦除或编程CONFIG
//        |           |  1 = 使能IAP擦除或编程CONFIG
// -------|-----------|-----------------------------------------------------
//    1   |   LDUEN   |  LDROM 更新使能
//        |           |  0 = 禁用IAP擦除或编程LDROM
//        |           |  1 = 使能IAP擦除或编程LDROM
// -------|-----------|-----------------------------------------------------
//    0   |   APUEN   |  APROM 更新使能
//        |           |  0 = 禁用IAP擦除或编程APROM
//        |           |  1 = 使能IAP擦除或编程APROM
// -------------------------------------------------------------------------

/************************* IAPAL – IAP地址低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                              IAPA[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：A6H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  IAPA[7:0]  |  IAP 地址低字节
//        |             |  IAPAL 包含地址 IAPA[7:0]
// ---------------------------------------------------------------------------

/************************* IAPAH – IAP地址高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             IAPA[15:8]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：A7H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  IAPA[15:8]  |  IAP 地址高字节
//        |              |  IAPAH 包含地址 IAPA[15:8] 
// ----------------------------------------------------------------------------

/************************* IE – 中断使能寄存器 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   EA   |  EADC  |  EBOD  |   ES   |  ET1   |  EX1   |  ET0   |  EX0   |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：A8H    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-------------------------------------------------------
//    7   |    EA       |  使能所有中断
//        |             |  该位全局使能/禁止所有中断
//        |             |  0 = 禁止所有中断源
//        |             |  1 = 每个中断使能依靠使能单个中断, 将会产生相应的单个中断
// -------|-------------|-------------------------------------------------------
//    6   |    EADC     |  使能ADC中断
//        |             |  0 = 禁用ADC中断
//        |             |  1 = 使能由ADCF (ADCCON0.7) 产生中断
// -------|-------------|-------------------------------------------------------
//    5   |    EBOD     |  使能BOD中断
//        |             |  0 = 禁用BOD中断
//        |             |  1 = 使能由BOF (BODCON0.3)产生中断断
// -------|-------------|-------------------------------------------------------
//    4   |    ES       |  使能串口0中断
//        |             |  0 = 禁用串口0中断
//        |             |  1 = 使能由TI (SCON.1) 或 RI (SCON.0)产生中断
// -------|-------------|-------------------------------------------------------
//    3   |    ET1      |  使能定时器1中断
//        |             |  0 = 禁用定时器1中断
//        |             |  1 = 使能由TF1 (TCON.7)产生中断
// -------|-------------|-------------------------------------------------------
//    2   |    EX1      |  使能外部中断1
//        |             |  0 = 禁用外部中断1
//        |             |  1 = 使能由INT1#（P1.7）产生中断
// -------|-------------|-------------------------------------------------------
//    1   |    ET0      |  使能定时器0中断
//        |             |  0 = 禁用定时器0中断
//        |             |  1 = 使能由TF0 (TCON.5)产生中断
// -------|-------------|-------------------------------------------------------
//    0   |    EX0      |  使能外部中断0
//        |             |  0 = 禁用外部中断0
//        |             |  1 = 使能由INT0#（P3.0）产生中断
// -----------------------------------------------------------------------------

/************************* SADDR – 从机0地址 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             SADDR[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：A9H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  SADDR[7:0]  |  从机0地址
//        |              |  该字节定义微控器自身的从机地址用于串口0多机通信
// ----------------------------------------------------------------------------

/************************* WDCON – 看门狗定时器控制寄存器 (TA保护) *************************/
// ----------------------------------------------------------------------------
// |   7    |    6    |   5    |    4    |    3    |   2    |   1    |   0    |
// |--------|---------|--------|---------|---------|--------------------------|
// |  WDTR  |  WDCLR  |  WDTF  |  WIDPD  |  WDTRF  |        WDPS[2:0]         |
// |--------|---------|--------|---------|---------|--------------------------|
// |  R/W   |   R/W   |  R/W   |   R/W   |   R/W   |           R/W            |
// ----------------------------------------------------------------------------
// 地址：AAH    复位值：未定
// 
// ------------------------------------------------------------------------------
//   Bit  |   Name         |  Description
// -------|----------------|-----------------------------------------------------
//    7   |   WDTR         |  WDT 运行
//        |                |  该位仅当控制位WDTEN[3:0] (CONFIG4[7:4])全为1时有效。
//        |                |  这时WDT工作在通用定时器模式
//        |                |  0 = WDT 禁止
//        |                |  1 = WDT 使能. WDT 计数器开始运行
// -------|----------------|-----------------------------------------------------
//    6   |   WDCLR        |  WDT 清除
//        |                |  设置该位复位WDT计数到00H。它使计数器到一个已知的状态，
//        |                |  防止系统出现不可预知的复位。写和读WDCLR位意思是不一样的。
//        |                |  写: 
//        |                |      0 = 无影响
//        |                |      1 = 清 WDT 计数器
//        |                |  读:
//        |                |      0 = WDT 计数器完全清零
//        |                |      1 = WDT 计数器还没有清零
// -------|----------------|-----------------------------------------------------
//    5   |   WDTF         |  WDT 超时标志
//        |                |  该位表示WDT计数器的溢出。该标志应该通过软件清零
// -------|----------------|-----------------------------------------------------
//    4   |   WIDPD        |  WDT 工作在空闲或掉电模式
//        |                |  该位仅当控制位WDTEN[3:0] (CONFIG4[7:4])全为1时有效。
//        |                |  它决定WDT作为通用定时器在空闲或掉电模式下是否保持工作。
//        |                |  0 = WDT 在空闲或掉电模式下停止工作
//        |                |  1 = WDT 在空闲或掉电模式下保持工作
// -------|----------------|-----------------------------------------------------
//    3   |   WDTRF        |  看门狗复位标志
//        |                |  当WDT超时事件发生，MCU会复位，该位由硬件置位。建议该位
//        |                |  由软件清零。
// -------|----------------|-----------------------------------------------------
//   2:0  |   WDPS[2:0]    |  WDT 时钟预分频选择
//        |                |  这些位决定了WDT时钟的预分频，从1/1 到 1/256。
// ------------------------------------------------------------------------------
// [1] WDTRF 在上电复位之后会被清零，在WDT复位之后置位，在其他任何复位之后保持不变。  
// [2] WDPS[2:0] 在上电复位之后全部置位，在其他任何复位之后保持不变。

/************************* BODCON1 – 欠压检测控制寄存器1 (TA 保护) *************************/
// ---------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |    0     |
// |--------|--------|--------|--------|--------|-----------------|----------|
// |   -    |   -    |   -    |   -    |   -    |   LPBOD[1:0]    |  BODFLT  |
// |--------|--------|--------|--------|--------|-----------------|----------|
// |   -    |   -    |   -    |   -    |   -    |      R/W        |   R/W    |
// ---------------------------------------------------------------------------
// 地址：ABH    复位值：未定
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   2:1  |  LPBOD[1:0]  |  低功率BOD使能
//        |              |  00 = BOD正常模式，BOD电路总是开启
//        |              |  01 = BOD低功耗模式1，每隔1.6ms周期性开启BOD电路
//        |              |  10 = BOD低功耗模式2，每隔6.4ms周期性开启BOD电路
//        |              |  11 = BOD低功耗模式3，每隔25.6ms周期性开启BOD电路
// -------|--------------|-----------------------------------------------------
//    0   |    BODFLT    |  BOD滤波器控制
//        |              |  当系统时钟选择HIRC或ECLK并且BOD没有工作在低功率模式下
//        |              |  (LPBOD[1:0] = [0, 0])，BOD有一个滤波器计数32个系统时钟
//        |              |  FSYS 来滤除电源噪声。其它情况下滤波器计数2个LIRC时钟
//        |              |  注意：当CPU停在掉电模式时，BOD滤波计数一直是2个LIRC时钟
//        |              |  BOD滤波器有效地避免电源噪声误触发BOD事件发生。设置该位
//        |              |  可以开启或是关闭BOD滤波功能
//        |              |  0 = 禁用BOD滤波器
//        |              |  1 =使能BOD滤波器(上电复位默认开启) 
// ----------------------------------------------------------------------------

/************************* P3M1 – 端口 3 模式选择 1 *************************/
// ------------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0         |
// |--------|--------|--------|--------|--------|--------|--------|-------------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  P3M1.0[3]  |
// |--------|--------|--------|--------|--------|--------|--------|-------------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |    R/W      |
// ------------------------------------------------------------------------------
// 地址：ACH, 页: 0    复位值：0000 0001b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    0   |  P3M1.0   |  端口 3 模式选择 1
// -------------------------------------------------------------------------
// [3] P3M1 和 P3M2结合用于决定P3每个引脚的I/O模式

/************************* P3S – 端口 3施密特触发输入 *************************/
// --------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0     |
// |--------|--------|--------|--------|--------|--------|--------|---------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  P3S.0  |
// |--------|--------|--------|--------|--------|--------|--------|---------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  R/W    |
// --------------------------------------------------------------------------
// 地址：ACH, 页: 1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    0   |  P3S.0    |  P3.0 施密特触发输入选择
//        |           |  0 = P3.0 TTL电平输入
//        |           |  1 = P3.0 施密特触发输入
// -------------------------------------------------------------------------

/************************* P3M2 – 端口3 模式选择 2 *************************/
// ------------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |     0       |
// |--------|--------|--------|--------|--------|--------|--------|-------------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  P3M2.0[3]  |
// |--------|--------|--------|--------|--------|--------|--------|-------------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |    R/W      |
// ------------------------------------------------------------------------------
// 地址：ADH, 页: 0    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    0   |  P3M2.0   |  端口3 模式选择 2
// -------------------------------------------------------------------------
// [3] P3M1 和 P3M2结合用于决定P3每个引脚的I/O模式

/************************* P3SR – 端口 3 斜率控制 *************************/
// ---------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |    0     |
// |--------|--------|--------|--------|--------|--------|--------|----------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |  P3SR.0  |
// |--------|--------|--------|--------|--------|--------|--------|----------|
// |   -    |   -    |   -    |   -    |   -    |   -    |   -    |   R/W    |
// ---------------------------------------------------------------------------
// 地址：ADH, 页: 1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    0   |  P3SR.0   |  P3.n 斜率控制
//        |           |  0 = P3.0 普通输出
//        |           |  1 = P3.0 高速输出
// -------------------------------------------------------------------------

/************************* IAPFD – IAP 内存数据 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             IAPFD[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：AEH    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  IAPFD[7:0]  |  IAP 内存数据
//        |              |  该字节包含将要读或写进内存空间的数据。编程模式下，用户需
//        |              |  要在触发IAP之前写数据到IAPFD里，读/校验模式下，在IAP完
//        |              |  成后从IAPFD读出数据。
// ----------------------------------------------------------------------------

/************************* IAPCN – IAP 控制寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------|--------|--------|-----------------------------------|
// |    IAPB[1:0]    |  FOEN  |  FCEN  |            FCTRL[3:0]             |
// |-----------------|--------|--------|-----------------------------------|
// |      R/W        |  R/W   |  R/W   |               R/W                 |
// -------------------------------------------------------------------------
// 地址：AFH    复位值：0011 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:6  |  IAPB[1:0]   |  IAP 控制
//    5   |    FOEN      |  该字节是IAP控制命令。
//    4   |    FCEN      |
//   3:0  |  FCTRL[3:0]  |
// ----------------------------------------------------------------------------

/************************* P3 – 端口 3 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   0    |   0    |   0    |   0    |   0    |   0    |   0    |  P3.0  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   R    |   R    |   R    |   R    |   R    |   R    |   R    |  R/W   |
// -------------------------------------------------------------------------
// 地址：B0H    复位值：0000 0001b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:1  |    0      |  保留位
//        |           |  读取始终为0
// -------|-----------|-----------------------------------------------------
//    0   |   P3.0    |  端口 3 第 0 位
//        |           |  当采用内部振荡器作为系统时钟时，P3.0可用作普通管脚使用。
//        |           |  当采用外部晶振输入方式，P3.0脚用作OSCIN，此时对P3.0写
//        |           |  入数值无效，且P3.0读取值为0
// -------------------------------------------------------------------------

/************************* P0M1 – 端口 0模式选择1 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  P0M1.7  |  P0M1.6  |  P0M1.5  |  P0M1.4  |  P0M1.3  |  P0M1.2  |  P0M1.1  |  P0M1.0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：B1H, 页: 0    复位值：1111 1111b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  P0M1[7:0]  |  端口 0 模式选择1
// ---------------------------------------------------------------------------
//  P0M1 和 P0M2 结合用于决定P0每个引脚的I/O模式

/************************* P0S – 端口 0 施密特触发输入 *************************/
// ---------------------------------------------------------------------------------
// |   7     |   6     |   5     |   4     |   3     |   2     |   1     |   0     |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  P0S.7  |  P0S.6  |  P0S.5  |  P0S.4  |  P0S.3  |  P0S.2  |  P0S.1  |  P0S.0  |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// ---------------------------------------------------------------------------------
// 地址：B1H, 页: 1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |   P0S.n   |  P0.n 施密特触发输入使能位
//        |           |  0 = P0.n TTL 电平输入
//        |           |  1 = P0.n 施密特触发输入
// -------------------------------------------------------------------------

/************************* P0M2 – 端口 0 模式选择 2 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  P0M2.7  |  P0M2.7  |  P0M2.7  |  P0M2.7  |  P0M2.7  |  P0M2.7  |  P0M2.7  |  P0M2.7  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：B2H, 页: 0    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  P0M2[7:0]  |  端口 0 模式选择 2
// ---------------------------------------------------------------------------
// P0M1 和 P0M2 结合用于决定P0每个引脚的I/O模式

/************************* P0SR – 端口 0 斜率控制 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  P0SR.7  |  P0SR.6  |  P0SR.5  |  P0SR.4  |  P0SR.3  |  P0SR.2  |  P0SR.1  |  P0SR.0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：B2H, 页: 1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  P0SR.n   |  P0.n 斜率控制
//        |           |  0 = P0.n 普通输出
//        |           |  1 = P0.n 高速输出
// -------------------------------------------------------------------------

/************************* P1M1 – 端口 1 模式选择 1 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  P1M1.7  |  P1M1.6  |  P1M1.5  |  P1M1.4  |  P1M1.3  |  P1M1.2  |  P1M1.1  |  P1M1.0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：B3H, 页: 0    复位值：1111 1111b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  P1M1[7:0]  |  端口 1 模式选择 1
// ---------------------------------------------------------------------------
// P1M1 和 P1M2 结合用于决定P1每个引脚的I/O模式

/************************* P1S – 端口 1施密特触发输入 *************************/
// ---------------------------------------------------------------------------------
// |   7     |   6     |   5     |   4     |   3     |   2     |   1     |   0     |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  P1S.7  |  P1S.6  |  P1S.5  |  P1S.4  |  P1S.3  |  P1S.2  |  P1S.1  |  P1S.0  |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// ---------------------------------------------------------------------------------
// 地址：B3H, 页: 1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |   P1S.n   |  P1.n 施密特触发输入选择
//        |           |  0 = P1.n TTL电平输入
//        |           |  1 = P1.n 施密特触发输入
// -------------------------------------------------------------------------

/************************* P1M2 – 端口 1 模式选择2 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  P1M2.7  |  P1M2.6  |  P1M2.5  |  P1M2.4  |  P1M2.3  |  P1M2.2  |  P1M2.1  |  P1M2.0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：B4H, 页: 0    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  P1M2[7:0]  |  端口 1 模式选择2
// ---------------------------------------------------------------------------
// P1M1 和 P1M2 结合用于决定P1每个引脚的I/O模式

/************************* P1SR – 端口 1 斜率控制 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  P1SR.7  |  P1SR.6  |  P1SR.5  |  P1SR.4  |  P1SR.3  |  P1SR.2  |  P1SR.1  |  P1SR.0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：B4H, 页: 1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  P1SR.n   |  P1.n 斜率控制
//        |           |  0 = P1.n 普通输出
//        |           |  1 = P1.n 高速输出
// -------------------------------------------------------------------------

/************************* P2S – P20 设置及定时器0/1输出使能 *************************/
// ---------------------------------------------------------------------------
// |   7     |   6    |   5    |   4    |   3    |   2    |   1    |   0     |
// |---------|--------|--------|--------|--------|--------|--------|---------|
// |  P20UP  |   -    |   -    |   -    |  T1OE  |  T0OE  |   -    |  P2S.0  |
// |---------|--------|--------|--------|--------|--------|--------|---------|
// |  R/W    |   -    |   -    |   -    |  R/W   |  R/W   |   -    |  R/W    |
// ---------------------------------------------------------------------------
// 地址：B5H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------------------
//    7   |   P20UP   |  P2.0 上拉使能位
//        |           |  0 = P2.0 禁止上拉
//        |           |  1 = P2.0 使能上拉
//        |           |  仅当RPD (CONFIG0.2)为0时该位有效。如果作为RST#引脚，上拉总是被使能
// -------|-----------|-----------------------------------------------------------------
//    3   |   T1OE    |  定时器 1 输出使能位
//        |           |  0 = 禁止定时器 1 输出
//        |           |  1 = 使能定时器 1 输出从T1引脚
//        |           |  注意：仅当运行在定时器模式时，定时器1输出才会被使能
// -------|-----------|-----------------------------------------------------------------
//    2   |   T0OE    |  定时器 0 输出使能位
//        |           |  0 = 禁止定时器 0  输出
//        |           |  1 = 使能定时器 0  输出从T0引脚
//        |           |  注意：仅当运行在定时器模式时，定时器0输出才会被使能
// -------|-----------|-----------------------------------------------------------------
//    0   |   P2S.0   |  P2.0 施密特触发输入选择
//        |           |  0 = P2.0 TTL电平输入
//        |           |  1 = P2.0 施密特触发输入
// -------------------------------------------------------------------------------------

/************************* IPH – 中断优先级高位寄存器 *************************/
// ---------------------------------------------------------------------------
// |   7    |   6     |   5     |   4    |   3    |   2    |   1    |   0    |
// |--------|---------|---------|--------|--------|--------|--------|--------|
// |   -    |  PADCH  |  PBODH  |  PSH   |  PT1H  |  PX1H  |  PT0H  |  PX0H  |
// |--------|---------|---------|--------|--------|--------|--------|--------|
// |   -    |  R/W    |  R/W    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// ---------------------------------------------------------------------------
// 地址：B7H, 页：0    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    6   |   PADCH   |  ADC中断优先级高位
// -------|-----------|-----------------------------------------------------
//    5   |   PBODH   |  BOD检测中断优先级高位
// -------|-----------|-----------------------------------------------------
//    4   |   PSH     |  串口0中断优先级高位
// -------|-----------|-----------------------------------------------------
//    3   |   PT1H    |  定时器1中断优先级高位
// -------|-----------|-----------------------------------------------------
//    2   |   PX1H    |  外部中断1中断优先级高位
// -------|-----------|-----------------------------------------------------
//    1   |   PT0H    |  定时器0中断优先级高位
// -------|-----------|-----------------------------------------------------
//    0   |   PX0H    |  外部中断0中断优先级高位
// -------------------------------------------------------------------------
// IPH使用时结合IP分别决定每个中断源的优先级。

/************************* PWMINTC – PWM 中断控制寄存器 *************************/
// ----------------------------------------------------------------------------------------
// |   7    |   6    |    5      |    4      |   3    |     2     |    1      |    0      |
// |--------|--------|-----------|-----------|--------|-----------|-----------|-----------|
// |   -    |   -    |  INTTYP1  |  INTTYP0  |   -    |  INTSEL2  |  INTSEL1  |  INTSEL0  |
// |--------|--------|-----------|-----------|--------|-----------|-----------|-----------|
// |   -    |   -    |   R/W     |   R/W     |   -    |   R/W     |   R/W     |   R/W     |
// ----------------------------------------------------------------------------------------
// 地址：B7H, 页:1    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|-----------------------------------------------------
//   5:4  |  INTTYP[1:0]  |  PWM 中断类型选择
//        |               |  通过该位选择PWM的中断类型
//        |               |  00 = PWM0/1/2/3/4/5 脚下降沿
//        |               |  01 = PWM0/1/2/3/4/5 脚上升沿
//        |               |  10 = 每个PWM周期的中心点
//        |               |  11 = 每个PWM周期的终点
//        |               |  注：中心点中断方式或终点中断方式仅适用于PWM中心对齐模式
// -------|---------------|-----------------------------------------------------
//   2:0  |  INTSEL[2:0]  |  PWM 中断对选择
//        |               |  在PWM0/1/2/3/4/5脚，当PWM已选择中断类型为上升沿或下降
//        |               |  沿时，该位段用以选择中断响应所相对的PWM脚。
//        |               |  000 = PWM0
//        |               |  001 = PWM1
//        |               |  010 = PWM2
//        |               |  011 = PWM3
//        |               |  100 = PWM4
//        |               |  101 = PWM5
//        |               |  其它 = PWM0
// -----------------------------------------------------------------------------

/************************* IP – 中断优先级寄存器 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |  PADC  |  PBOD  |   PS   |  PT1   |  PX1   |  PT0   |  PX0   |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：B8H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    6   |   PADC    |  ADC中断优先级低位
// -------|-----------|-----------------------------------------------------
//    5   |   PBOD    |  BOD检测中断优先级低位
// -------|-----------|-----------------------------------------------------
//    4   |   PS      |  串口0中断优先级低位
// -------|-----------|-----------------------------------------------------
//    3   |   PT1     |  定时器1中断优先级低位
// -------|-----------|-----------------------------------------------------
//    2   |   PX1     |  外部中断1中断优先级低位
// -------|-----------|-----------------------------------------------------
//    1   |   PT0     |  定时器0中断优先级低位
// -------|-----------|-----------------------------------------------------
//    0   |   PX0     |  外部中断0中断优先级低位
// -------------------------------------------------------------------------
// IP使用时结合IPH一起决定每个中断源的优先级。

/************************* SADEN – 从机 0地址掩码 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             SADEN[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：B9H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |    Name      |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  SADEN[7:0]  |  从机0地址掩码
//        |              |  该字节为UART0的掩码，其中无关位用0表示，这样可以形成一
//        |              |  个或多个更灵活的自身从机地址
// ----------------------------------------------------------------------------

/************************* SADEN_1 – 从机 1 地址掩码 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                            SADEN_1[7:0]                               |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：BAH    复位值：0000 0000b
// 
// ------------------------------------------------------------------------------
//   Bit  |     Name       |  Description
// -------|----------------|-----------------------------------------------------
//   7:0  |  SADEN_1[7:0]  |  从机1 地址掩码
//        |                |  该字节为UART1的掩码，其中无关位用0表示，这样可以形成一
//        |                |  个或多个更灵活的自身从机地址
// ------------------------------------------------------------------------------

/************************* SADDR_1 – 从机 1 地址 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                            SADDR_1[7:0]                               |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：BBH    复位值：0000 0000b
// 
// ------------------------------------------------------------------------------
//   Bit  |     Name       |  Description
// -------|----------------|-----------------------------------------------------
//   7:0  |  SADDR_1[7:0]  |  从机1地址
//        |                |  该字节定义微控制器自身的从机地址用于串口1多机通信
// ------------------------------------------------------------------------------

/************************* I2DAT – I2C 数据寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             I2DAT[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：BCH    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------------
//   Bit  |     Name       |  Description
// -------|----------------|--------------------------------------------------------
//   7:0  |   I2DAT[7:0]   |  I2C 数据寄存器
//        |                |  该寄存器存放准备发送的，或接收到的数据。只要SI = 1，此
//        |                |  数据就有效。在I2C传输过程中去读或写I2DAT，其结果不可预知。
//        |                |  数据发送时，数据移位到总线上，同时总线上的数据会接收回来，
//        |                |  所以总线仲载失败时，再读这个数据，可能与之前写入的值不一样。
// ---------------------------------------------------------------------------------

/************************* I2STAT – I2C 状态寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------------------------------------------|--------|--------|--------|
// |                I2STAT[7:3]                 |   0    |   0    |   0    |
// |--------------------------------------------|--------|--------|--------|
// |                     R                      |   R    |   R    |   R    |
// -------------------------------------------------------------------------
// 地址：BDH    复位值：1111 1000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|-----------------------------------------------------
//   7:3  |  I2STAT[7:3]  |  I2C 状态字
//        |               |  I2STAT的高5位为状态码，共有27种状态值。 I2STAT = F8H 
//        |               |  时， 表示空闲，SI 将保持为0。其它26种状态值与I2C的状态
//        |               |  一样，进入每一种状态都会让SI置1，且产生中断请求。
// -------|---------------|-----------------------------------------------------
//   2:0  |       0       |  保留位
//        |               |  I2STAT的低3位最低有效位读取始终为0 
// -----------------------------------------------------------------------------

/************************* I2CLK – I2C 时钟寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                             I2CLK[7:0]                                |
// |-----------------------------------------------------------------------|
// |                                 R/W                                   |
// -------------------------------------------------------------------------
// 地址：BEH    复位值：0000 1001b
// 
// ----------------------------------------------------------------------------
//   Bit  |    Name      |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  I2CLK[7:0]  |  I2C 时钟设定
//        |              |  主机模式：
//        |              |  该寄存器设定作主机时I2C总线时钟速率。算式如下：
//        |              |  FSYS/(4 * (I2CLK + 1))
//        |              |  如果I2C的外设时钟频率是16MHz，默认状态下，I2C的总线频率
//        |              |  为400Kbps。注意：I2CLK 值写入00H 及 01H 无效。
//        |              |  从机模式：
//        |              |  该字节无效，从机自动跟随主机时钟，最高 400k bps。
// ----------------------------------------------------------------------------

/************************* I2TOC – I2C 超时计数器 *************************/
// -----------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |    2      |   1    |   0     |
// |--------|--------|--------|--------|--------|-----------|--------|---------|
// |   -    |   -    |   -    |   -    |   -    |  I2TOCEN  |  DIV   |  I2TOF  |
// |--------|--------|--------|--------|--------|-----------|--------|---------|
// |   -    |   -    |   -    |   -    |   -    |   R/W     |  R/W   |  R/W    |
// -----------------------------------------------------------------------------
// 地址：BFH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    2   |  I2TOCEN  |  I2C 超时计数器使能位
//        |           |  0 = I2C 超时计数器关闭
//        |           |  1 = I2C 超时计数器使能
// -------|-----------|-----------------------------------------------------
//    1   |    DIV    |  I2C 超时计数器计时除频
//        |           |  0 = I2C 超时计数器除频 FSYS/1 
//        |           |  1 = I2C 超时计数器除频 FSYS/4
// -------|-----------|-----------------------------------------------------
//    0   |   I2TOF   |  I2C 超时标志
//        |           |  如果14位I2C超时计数器溢出，该位会由硬件置位。该位需要由
//        |           |  软件清0
// -------------------------------------------------------------------------

/************************* I2CON – I2C 控制寄存器 (可位寻址) *************************/
// --------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0     |
// |--------|--------|--------|--------|--------|--------|--------|---------|
// |   -    |  I2CEN |  STA   |  STO   |   SI   |   AA   |   -    |  I2CPX  |
// |--------|--------|--------|--------|--------|--------|--------|---------|
// |   -    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |   -    |  R/W    |
// --------------------------------------------------------------------------
// 地址：C0H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    6   |   I2CEN   |  I2C 总线使能
//        |           |  0 = I2C 禁止
//        |           |  1 = I2C 使能
//        |           |  使能 I2C之前, SCL和SDA必须配置为输出1
// -------|-----------|-----------------------------------------------------
//    5   |    STA    |  起始标志START
//        |           |  当STA置1，如果总线空闲，I2C产生START信号，如果总线忙，
//        |           |  I2C等待停止条件STOP，然后产生START信号
//        |           |  如果总线已经在总线模式且已发送一个或多个字节，此时再设
//        |           |  定STA，I2C 总线将产生重复开始信号repeated START
//        |           |  注：STA可在任何时间置1，包括从机模式。但硬件不会在发送
//        |           |  START或repeatSTART信号后自动清0。用户需软件清除。
// -------|-----------|-----------------------------------------------------
//    4   |    STO    |  停止标志STOP
//        |           |  I2C 总线在主机模式下设定STO为1，将会向总线发送停止信号
//        |           |  STOP。一旦总线上停止条件完成，STO由硬件自动清0。
//        |           |  当总线上产生错误状态(I2STAT为00H) STO 也会置1。这种情
//        |           |  况下总线不会发送停止位。
//        |           |  如果STA和STO同时置1，且在主机模式下，I2C总线在发送
//        |           |  START后马上发送STOP。如果在从机模式下，应避免STA及STO
//        |           |  同时置1，以避免引发帧错误。
// -------|-----------|-----------------------------------------------------
//    3   |    SI     |  I2C 中断标志
//        |           |  I2C所有26种状态中出现一种，硬件就会置1此位 (F8H 除外) ，
//        |           |  此时软件根据读取I2STAT内值，决定下一步骤。
//        |           |  SI由软件清0.在SI被清0之前，SCL低电平周期延长，传输暂停，
//        |           |  该状态对于从机处理接收到的数据非常有用，可以确保准确处理
//        |           |  再接收下一笔数据。SI 位被软件清0后，I2C外设才会继续下一
//        |           |  步：根据软件控制位设定，继续发数据，或起始位，或停止位
//        |           |  等，因此在清除SI位之前，软件需确认适当的状态。
// -------|-----------|-----------------------------------------------------
//    2   |    AA     |  应答响应标志
//        |           |  若AA = 1，接收数据时，会在第9位发出应答ACK——拉低数据线。
//        |           |  若AA = 0 ，接收数据时，将向总线发送不应答（NACK），第9
//        |           |  位时不拉低数据线，若器件自我清除AA标志位，则会清除其从
//        |           |  机地址或广播呼叫，SI会被清0，中断不予产生。所以MCU将不响
//        |           |  应任何数据，包括从机地址。
//        |           |  从机接收时若AA=0不返回应答，或从机发送时没收到应答，从机
//        |           |  传输就结束了。
//        |           |  注： 若已被寻址的从机，在从机接收模式下未回复应答位或在从
//        |           |  机发送模式下未接收到应答位，该从机将变为未寻址从机，无法
//        |           |  接收数据直到其AA被置1，且重新被主机寻址。
//        |           |  特殊情况： 注意：从机发送时，状态码若为 C8H ，从机发送最
//        |           |  后一个字节之前，让 AA= 0，发送完最后一个字节，不再回应答，
//        |           |  传输结束。主机若再从总线上读数据，将得到FFH。
// -------|-----------|-----------------------------------------------------
//    0   |   I2CPX   |  I2C 引脚选择
//        |           |  0 = 分配 SCL 是 P1.3 和 SDA 是 P1.4
//        |           |  1 = 分配 SCL 是 P0.2 和 SDA 是 P1.6
//        |           |  注意：一旦该位置位或清0，I2C引脚会立刻更换。
// -------------------------------------------------------------------------

/************************* I2ADDR – I2C 从机地址 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------------------------------------------------------------|--------|
// |                         I2ADDR[7:1]                          |   GC   |
// |--------------------------------------------------------------|--------|
// |                             R/W                              |  R/W   |
// -------------------------------------------------------------------------
// 地址：C1H    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|-----------------------------------------------------
//   7:1  |  I2ADDR[7:1]  |  I2C 从机地址
//        |               |  主机模式：
//        |               |  该位段无效
//        |               |  从机模式：
//        |               |  存放7位从机地址。主机需在START或re-START之后写入该值，
//        |               |  发送从机地址。如果AA为1，I2C设备接收到从地址后，并响应
//        |               |  主机。否则主机呼叫地址会被忽略。
//        |               |  注：I2ADDR[7:1] 不能写为全0，因为0x00为广播呼叫方式寻
//        |               |  址专用。
// -------|---------------|-----------------------------------------------------
//    0   |      GC       |  广播呼叫位
//        |               |  主机模式：
//        |               |  该位段无效
//        |               |  从机模式：
//        |               |  0 = 广播呼叫模式忽略，不响应。
//        |               |  1 = 如果AA置1，参与广播呼叫模式，若AA清0，忽略广播呼叫。
// -----------------------------------------------------------------------------

/************************* ADCRL – ADC 转换结果低位寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|-----------------------------------|
// |   -    |   -    |   -    |   -    |             ADCR[3:0]             |
// |--------|--------|--------|--------|-----------------------------------|
// |   -    |   -    |   -    |   -    |                R                  |
// -------------------------------------------------------------------------
// 地址：C2H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   3:0  |  ADCR[3:0]  |  ADC转换结果低位
//        |             |  ADC转换结果低4位
// ---------------------------------------------------------------------------

/************************* ADCRH – ADC转换结果高位寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           ADCR[11:4]                                  |
// |-----------------------------------------------------------------------|
// |                                 R                                     |
// -------------------------------------------------------------------------
// 地址：C3H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  ADCR[11:4]  |  ADC转换结果高位
//        |              |  ADC转换结果高8位
// ----------------------------------------------------------------------------

/************************* T3CON – 定时器3控制寄存器 *************************/
// ------------------------------------------------------------------------------
// |   7      |    6      |   5    |   4    |   3    |   2    |   1    |   0    |
// |----------|-----------|--------|--------|--------|--------------------------|
// |  SMOD_1  |  SMOD0_1  |  BRCK  |  TF3   |  TR3   |        T3PS[2:0]         |
// |----------|-----------|--------|--------|--------|----------------- --------|
// |  R/W     |   R/W     |  R/W   |  R/W   |  R/W   |           R/W            |
// ------------------------------------------------------------------------------
// 地址：C4H, 页:0    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |  SMOD_1   |  串行口1波特率加倍使能
//        |           |  当串口1在模式2下，时钟溢出波特率加倍使能。
// -------|-----------|-----------------------------------------------------
//    6   |  SMOD0_1  |  串口1帧错误使能位
//        |           |  0 =关闭帧错误检测功能，作为SM0_1用
//        |           |  1 =使能帧错误检测，用作帧错误 (FE) 状态标志FE_1
// -------|-----------|-----------------------------------------------------
//    5   |   BRCK    |  串口0波特率时钟源选择
//        |           |  该位用于设置串口0 在模式1或模式3下，所使用的定时器
//        |           |  0 = 定时器 1
//        |           |  1 = 定时器 3
// -------|-----------|-----------------------------------------------------
//    4   |   TF3     |  定时器 3 溢出标志
//        |           |  当定时器3溢出，该位置位。当程序执行定时器3的中断服务程序，
//        |           |  该位由硬件自动清零。该位可以通过软件置位或清零。
// -------|-----------|-----------------------------------------------------
//    3   |   TR3     |  定时器 3 运行控制
//        |           |  0 = 定时器 3 停止
//        |           |  1 = 定时器 3 开始计数
//        |           |  注意重载寄存器R3H 和 R3L仅在定时器3停止(TR3 为 0)的时候
//        |           |  才可以被写。如果TR3 位为1写入RH3或RL3，结果是不可预知的。
// -------|-----------|-----------------------------------------------------
//   2:0  | T3PS[2:0] |  定时器 3 预分频
//        |           |  这些位决定定时器3的时钟分频。
//        |           |  000 = 1/1
//        |           |  001 = 1/2
//        |           |  010 = 1/4
//        |           |  011 = 1/8
//        |           |  100 = 1/16
//        |           |  101 = 1/32
//        |           |  110 = 1/64
//        |           |  111 = 1/128
// -------------------------------------------------------------------------

/************************* PWM4H – PWM4占空比寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           PWM4[15:8]                                  |
// |-----------------------------------------------------------------------|
// |                                R/W                                    |
// -------------------------------------------------------------------------
// 地址：C4H, 页:1    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWM4[15:8]  |  PWM4 占空比数据高字节
//        |              |  该位与PWM4L搭配，配置由PG4输出的占空比数据
// ----------------------------------------------------------------------------

/************************* RL3 – 定时器3自动重装载寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                            RL3[7:0]                                   |
// |-----------------------------------------------------------------------|
// |                                R/W                                    |
// -------------------------------------------------------------------------
// 地址：C5H, 页:0     复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  RL3[7:0] |  定时器 3 重载低字节
//        |           |  它保持着定时器3重载值的低字节
// -------------------------------------------------------------------------

/************************* PWM5H – PWM5占空比寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           PWM5[15:8]                                  |
// |-----------------------------------------------------------------------|
// |                                R/W                                    |
// -------------------------------------------------------------------------
// 地址：C5H, 页:1    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |    Name      |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWM5[15:8]  |  PWM5 占空比数据高字节
//        |              |  该位与PWM5L搭配，配置由PG5输出的占空比数据
// ----------------------------------------------------------------------------

/************************* RH3 – 定时器3自动重装载寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                            RH3[7:0]                                   |
// |-----------------------------------------------------------------------|
// |                                R/W                                    |
// -------------------------------------------------------------------------
// 地址：C6H, 页:0    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  RH3[7:0]  |  定时器 3 重载高字节
//        |            |  它保持着定时器3重载值的高字节
// --------------------------------------------------------------------------

/************************* PIOCON1 – PWM 或 I/O 选择寄存器 *************************/
// -----------------------------------------------------------------------------
// |   7    |   6    |   5     |   4    |   3     |   2     |   1     |   0    |
// |--------|--------|---------|--------|---------|---------|---------|--------|
// |   -    |   -    |  PIO15  |   -    |  PIO13  |  PIO12  |  PIO11  |   -    |
// |--------|--------|---------|--------|---------|---------|---------|--------|
// |   -    |   -    |  R/W    |   -    |  R/W    |  R/W    |  R/W    |   -    |
// -----------------------------------------------------------------------------
// 地址：C6H, 页:1    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    5   |   PIO15   |  P1.5/PWM5 管脚功能选择位
//        |           |  0 = P1.5/PWM5 管脚用作 P1.5
//        |           |  1 = P1.5/PWM5 管脚用作PWM5 输出
// -------|-----------|-----------------------------------------------------
//    3   |   PIO13   |  P0.4/PWM3 管脚功能选择位
//        |           |  0 = P0.4/PWM3 管脚用作 P0.4
//        |           |  1 = P0.4/PWM3 管脚用作 PWM3 输出
// -------|-----------|-----------------------------------------------------
//    2   |   PIO12   |  P0.5/PWM2 管脚功能选择位
//        |           |  0 = P0.5/PWM2 管脚用作 P0.5
//        |           |  1 = P0.5/PWM2 管脚用作 PWM2 输出
// -------|-----------|-----------------------------------------------------
//    1   |   PIO11   |  P1.4/PWM1 管脚功能选择位
//        |           |  0 = P1.4/PWM1 管脚用作 P1.4
//        |           |  1 = P1.4/PWM1 管脚用作 PWM1 输出
// -------------------------------------------------------------------------

/************************* TA – 时控保护寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                            TA[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                 W                                     |
// -------------------------------------------------------------------------
// 地址：C7H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  TA[7:0]  |  时控保护
//        |           |  TA寄存器控制着对被保护的SFRs的访问权限。当需要写特殊规
//        |           |  定的寄存器时，必须先对TA寄存器写入AAH，接着是55H，当写
//        |           |  完这两条后，才可以有4个时钟周期的时间对具有时控保护的寄
//        |           |  存器写入数据。
// -------------------------------------------------------------------------

/************************* T2CON – 定时器 2 控制寄存器 *************************/
// ----------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |    0      |
// |--------|--------|--------|--------|--------|--------|--------|-----------|
// |  TF2   |   -    |   -    |   -    |   -    |  TR2   |   -    |  CM/RL2#  |
// |--------|--------|--------|--------|--------|--------|--------|-----------|
// |  R/W   |   -    |   -    |   -    |   -    |  R/W   |   -    |   R/W     |
// ----------------------------------------------------------------------------
// 地址：C8H    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |     Name      |  Description
// -------|---------------|-----------------------------------------------------
//    7   |      TF2      |  定时器 2 溢出标志
//        |               |  当定时器2溢出或者比较数据符合，该位置1.。如果已使能定时
//        |               |  器2中断，该位置1会让芯片进入定时器2中断运行。该位硬件置
//        |               |  1，但需要软件清0。
// -------|---------------|-----------------------------------------------------
//    7   |     TR2       |  定时器2 运行控制
//        |               |  0 = 定时器计数关闭。清除该位关闭定时器计数，目前已计数
//        |               |      值会保留在TH2及TL2
//        |               |  1 = 定时器2计数使能
// -------|---------------|-----------------------------------------------------
//    7   |    CM/RL2#    |  定时器 2 比较及自动重装载功能选择
//        |               |  0 = 自动重装载模式
//        |               |  1 = 比较器模式
// -----------------------------------------------------------------------------

/************************* T2MOD – 定时器2模式选择 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------------------------|--------|--------|-----------------|
// |  LDEN  |        T2DIV[2:0]        |  CAPCR |  CMPCR |    LDTS[1:0]    |
// |--------|--------------------------|--------|--------|-----------------|
// |  R/W   |           R/W            |  R/W   |  R/W   |      R/W        |
// -------------------------------------------------------------------------
// 地址：C9H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//    7   |   LDEN       |  自动重装载使能位
//        |              |  0 = 自动重装载功能关闭
//        |              |  1 = 将RCMP2H及RCMP2L自动重装载至TH2及TL2功能使能
// -------|--------------|-----------------------------------------------------
//   6:4  |  T2DIV[2:0]  |  定时器 2时钟除频
//        |              |  000 = 定时器2时钟分频为 1/1
//        |              |  001 = 定时器2时钟分频为 1/4
//        |              |  010 = 定时器2时钟分频为 1/16
//        |              |  011 = 定时器2时钟分频为 1/32
//        |              |  100 = 定时器2时钟分频为 1/64
//        |              |  101 = 定时器2时钟分频为 1/128
//        |              |  110 = 定时器2时钟分频为 1/256
//        |              |  111 = 定时器2时钟分频为 1/512
// -------|--------------|-----------------------------------------------------
//    3   |    CAPCR     |  捕获模式自动清除
//        |              |  该位仅当定时器2设定为自动重装载模式下有效。该位使能，当
//        |              |  捕获完成，TH2及TL2内数据移入RCMP2H 及 RCMP2L后，硬件自
//        |              |  动清除TH2及TL2计数寄存器功能。
//        |              |  0 = 捕获完成后定时器2计数按之前计数值继续累加。
//        |              |  1 = 捕获完成后定时器2数据自动清0
// -------|--------------|-----------------------------------------------------
//    2   |    CMPCR     |  比较完成自动清除
//        |              |  该位仅当定时器2比较功能模式下有效。当比较符合后，自动清除
//        |              |  TH2及TL2计数器值。
//        |              |  0 = 比较符合之后，定时器2内数据按之前继续计数。
//        |              |  1 = 比较符合之后，定时器2内数据自动清0。 
// -------|--------------|-----------------------------------------------------
//   1:0  |  LDTS[1:0]   |  自动重装载触发选择
//        |              |  00 = 当定时器2溢出自动重装载
//        |              |  01 = 当捕获0通道事件完成，自动重装载
//        |              |  10 = 当捕获1通道事件完成，自动重装载
//        |              |  11 = 当捕获2通道事件完成，自动重装载
// ----------------------------------------------------------------------------

/************************* RCMP2L – 定时器 2 重装载 / 比较数据低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          RCMP2L[7:0]                                  |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CAH    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |     Name      |  Description
// -------|---------------|-----------------------------------------------------
//   7:0  |  RCMP2L[7:0]  |  定时器 2 重装载/比较器低字节
//        |               |  当定时器2设定为比较模式，预存放低字节待比较数据。
//        |               |  当设定为自动重装载，预存放低字节数据。
// -----------------------------------------------------------------------------

/************************* RCMP2H – 定时器 2 重装载 / 比较数据高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          RCMP2H[7:0]                                  |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CBH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|---------------|-----------------------------------------------------
//   7:0  |  RCMP2H[7:0]  |  定时器 2 重装载/比较器高字节
//        |               |  当定时器2设定为比较模式，预存放高字节待比较数据。
//        |               |  当设定为自动重装载，预存放高字节数据。
// -----------------------------------------------------------------------------

/************************* TL2 – 定时器2低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           TL2[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CCH, 页:0    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  TL2[7:0]  |  定时器 2 低字节数据
//        |            |  该寄存器存放16位定时器2实际计数的低8位字节数据。
// --------------------------------------------------------------------------

/************************* PWM4L – PWM4占空比寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           PWM4[7:0]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CCH, 页:1     复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWM4[7:0]  |  PWM4 占空比低字节
//        |             |  该位与PWM4H搭配，配置由PG4输出的占空比数据
// ---------------------------------------------------------------------------

/************************* TH2 – 定时器2高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           TH2[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CDH, 页:0     复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  TH2[7:0]  |  定时器 2 高字节数据
//        |            |  该寄存器存放16位定时器2实际计数的高8位字节数据。
// --------------------------------------------------------------------------

/************************* PWM5L – PWM5占空比寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                           PWM5[7:0]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CDH, 页:1    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWM5[7:0]  |  PWM5 占空比低字节
//        |             |  该位与PWM5H搭配，配置由PG5输出的占空比数据
// ---------------------------------------------------------------------------

/************************* ADCMPL – ADC比较值低位寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|-----------------------------------|
// |   -    |   -    |   -    |   -    |            ADCMP[3:0]             |
// |--------|--------|--------|--------|-----------------------------------|
// |   -    |   -    |   -    |   -    |               R/W                 |
// -------------------------------------------------------------------------
// 地址：CEH    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  ADCMP[3:0]  |  ADC 比较值低位
//        |              |  ADC比较值低4位
// ----------------------------------------------------------------------------

/************************* ADCMPH – ADC比较值高位寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          ADCMP[11:4]                                  |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：CFH    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name        |  Description
// -------|---------------|-----------------------------------------------------
//   7:0  |  ADCMP[11:4]  |  ADC比较值高字节
//        |               |  ADC比较值高字节8位内容
// -----------------------------------------------------------------------------

/************************* PSW – 编程状态字 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   CY   |   AC   |   F0   |  RS1   |  RS0   |   OV   |   F1   |   P    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |   R    |
// -------------------------------------------------------------------------
// 地址：D0H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |    CY     |  高位进位标志
//        |           |  进行加法或减法操作时，当前运算需要向高位进位或借位时，CY
//        |           |  将置位，否则清零。
//        |           |  在进行MUL 或 DIV运算时，CY始终为0。
//        |           |  CY受DA A指令影响，用来表示是否初始BCD数大于100。
//        |           |  在CJNE指令中，如果第一个无符号数的值小于第二个，则CY置
//        |           |  1，否则清0。
// -------|-----------|-----------------------------------------------------
//    6   |    AC     |  辅助进位标志
//        |           |  当前运算导致从半字节的低序第4位进位或借位，该位置位，否
//        |           |  则清零。
// -------|-----------|-----------------------------------------------------
//    5   |    F0     |  用户标志0
//        |           |  可由用户置位或清零的通用标志。
// -------|-----------|-----------------------------------------------------
//    4   |    RS1    |  寄存器页选择
//        |           |  这两位用来选择R0到R7位于四页中的哪一页：
//        |           |  RS1  RS0  寄存器页   RAM 地址
//        |           |   0    0      0      00H 到 07H
// -------|-----------|   0    1      1      08H 到 0FH
//    3   |    RS0    |   1    0      2      10H 到 17H 
//        |           |   1    1      3      18H 到 1FH
//        |           |
// -------|-----------|-----------------------------------------------------
//    2   |    OV     |  溢出标志
//        |           |  OV用于标示发生溢出。对于加法指令 ADD或ADDC指令中，如果
//        |           |  位6有进位而位7没进位，或者位7有进位而位6没有进位，则溢
//        |           |  出标志置“ ”，反之清“ ”。 OV 也用于标示有符号数累加结果
//        |           |  ，当两个正数相加，或两个负数相加结果为负数时OV为1。对于
//        |           |  减法指令SUBB，当位6发生借位而位7没有，或者位7发生借位
//        |           |  而位6没有借位，则溢出标志置“ ”，反之清“ ”。 OV也用于标
//        |           |  示两个数相减时，当一个正数加一负数结果为负，或两个负数
//        |           |  相减结果为负时。
//        |           |  对于MUL乘法指令，当结果大于255 (00FFH)时，OV置1。反之
//        |           |  清0。
//        |           |  对于DIV除法指令，通常情况下OV为0。 除非当B设定值为00H，
//        |           |  则A和B的返回值为随机值，同时OV 置1。
// -------|-----------|-----------------------------------------------------
//    1   |    F1     |  用户标志1
//        |           |  可由用户置位或清零的通用标志。
// -------|-----------|-----------------------------------------------------
//    0   |    P      |  奇偶标志
//        |           |  当累加结果为奇数时，该标志置1，偶数时清0。其执行奇偶校验。
// -------------------------------------------------------------------------

/************************* PWMPH – PWM周期寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWMP[15:8]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：D1H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWMP[15:8]  |  PWM周期寄存器高字节
//        |              |  与PWMPL搭配组成PWM周期信号
// ----------------------------------------------------------------------------

/************************* PWM0H – PWM0 占空比寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM0[15:8]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：D2H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWM0[15:8]  |  PWM0 占空比数据高字节
//        |              |  该位与PWM0L搭配，配置由PG0输出的占空比数据
// ----------------------------------------------------------------------------

/************************* PWM1H – PWM1 占空比寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM1[15:8]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：D3H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWM1[15:8]  |  PWM1 占空比数据高字节
//        |              |  该位与PWM1L搭配，配置由PG1输出的占空比数据
// ----------------------------------------------------------------------------

/************************* PWM2H – PWM2 占空比寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM2[15:8]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：D4H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWM2[15:8]  |  PWM2 占空比数据高字节
//        |              |  该位与PWM2L搭配，配置由PG2输出的占空比数据
// ----------------------------------------------------------------------------

/************************* PWM3H – PWM3 占空比寄存器高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM3[15:8]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：D5H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |   Name       |  Description
// -------|--------------|-----------------------------------------------------
//   7:0  |  PWM3[15:8]  |  PWM3 占空比数据高字节
//        |              |  该位与PWM3L搭配，配置由PG3输出的占空比数据
// ----------------------------------------------------------------------------

/************************* PNP – PWM 负极性寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |   -    |  PNP5  |  PNP4  |  PNP3  |  PNP2  |  PNP1  |  PNP0  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |   -    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：D6H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |   PNPn    |  PWMn 负极性输出使能
//        |           |  0 = PWMn 输出按照设定直接输出到PWMn管脚
//        |           |  1 = PWMn 输出按照设定取反输出到PWMn管脚
// -------------------------------------------------------------------------

/************************* FBD – PWM 故障刹车数据 *************************/
// ---------------------------------------------------------------------------
// |   7    |    6     |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|----------|--------|--------|--------|--------|--------|--------|
// |  FBF   |  FBINLS  |  FBD5  |  FBD4  |  FBD3  |  FBD2  |  FBD1  |  FBD0  |
// |--------|----------|--------|--------|--------|--------|--------|--------|
// |  R/W   |   R/W    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// ---------------------------------------------------------------------------
// 地址：D7H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |    FBF    |  故障刹车标志位
//        |           |  当FBINEN设置为1，FB管脚上侦测到符合FBINLS (FBD.6)设定
//        |           |  的边沿信号后，该位置1。该位需要通过软件清0。当FBF清0后，
//        |           |  故障刹车仍然不会释放PWM输出，需要重新输出，除非设置
//        |           |  PWMRUN (PWMCON0.7)为1，重新启动PWM输出。
// -------|-----------|-----------------------------------------------------
//    6   |  FBINLS   |  FB 管脚输入选择
//        |           |  0 = 下降沿
//        |           |  1 = 上升沿
// -------|-----------|-----------------------------------------------------
//   5:0  |   FBDn    |  PWMn 故障刹车数据
//        |           |  0 = 当故障发生时PWMn 信号输出为0
//        |           |  1 = 当故障发生时PWMn 信号输出为1
// -------------------------------------------------------------------------

/************************* PWMCON0 – PWM 控制寄存器 0 (可位寻址) *************************/
// -----------------------------------------------------------------------------
// |    7     |   6    |   5    |    4     |   3    |   2    |   1    |   0    |
// |----------|--------|--------|----------|--------|--------|--------|--------|
// |  PWMRUN  |  LOAD  |  PWMF  |  CLRPWM  |   -    |   -    |   -    |   -    |
// |----------|--------|--------|----------|--------|--------|--------|--------|
// |   R/W    |  R/W   |  R/W   |   R/W    |   -    |   -    |   -    |   -    |
// -----------------------------------------------------------------------------
// 地址：D8H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |  PWMRUN   |  PWM 运行使能位
//        |           |  0 = PWM 模块空闲
//        |           |  1 = PWM 开始运行
// -------|-----------|-----------------------------------------------------
//    6   |   LOAD    |  PWM 载入新周期及占空比
//        |           |  该位用于载入周期及占空比所新设定的值。当前一个PWM周期输
//        |           |  出结束，载入动作才会开始。更改的周期及占空比值将在下一个
//        |           |  周期展现。当载入动作结束，硬件自动将LOAD位清0。这一特性
//        |           |  会使得LOAD位写入及读出值可能不一致，意义也不相同。
//        |           |  写: 
//        |           |      0 = 不动作
//        |           |      1 = 载入之前在缓存内存入的周期及占空比值
//        |           |  读:
//        |           |      0 = 载入动作已完成
//        |           |      1 = 正在执行载入动作
// -------|-----------|-----------------------------------------------------
//    5   |   PWMF    |  PWM 标志位
//        |           |  该位根据PWMINTC的INTSEL[2:0]及 INTTYP[1:0] 位来设定。
//        |           |  由软件清0。
// -------|-----------|-----------------------------------------------------
//    4   |  CLRPWM   |  清除 PWM计数器
//        |           |  该位置1，会直接清零PWM16位计数器至0000H。当清除计数器动
//        |           |  作完成，硬件会自动将该位清0。这特性会使得CLRPWM位写入和
//        |           |  读出值不一致，意义也不相同。
//        |           |  写:
//        |           |      0 = 无动作
//        |           |      1 = 清除16位PWM计数器
//        |           |  读:
//        |           |      0 = PWM16位计数器已清除
//        |           |      1 = 16位计数器内还有数值，未清除
// -------------------------------------------------------------------------

/************************* PWMPL – PWM周期寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWMP[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：D9H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWMP[7:0]  |  PWM 周期值低字节
//        |             |  该寄存器存储与PWMPH搭配存储PWM的周期值，该位段为低字节
// ---------------------------------------------------------------------------

/************************* PWM0L – PWM0占空比寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM0[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：DAH    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWM0[7:0]  |  PWM0 占空比寄存器低字节
//        |             |  该位与PWM0H 搭配，配置由PG0输出的占空比数据
// ---------------------------------------------------------------------------

/************************* PWM1L – PWM/1占空比寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM1[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：DBH    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWM1[7:0]  |  PWM1 占空比寄存器低字节
//        |             |  该位与PWM1H 搭配，配置由PG1输出的占空比数据
// ---------------------------------------------------------------------------

/************************* PWM2L – PWM2占空比寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM2[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：DCH    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWM2[7:0]  |  PWM2 占空比寄存器低字节
//        |             |  该位与PWM2H 搭配，配置由PG2输出的占空比数据
// ---------------------------------------------------------------------------

/************************* PWM3L – PWM3占空比寄存器低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          PWM3[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：DDH    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  PWM3[7:0]  |  PWM3 占空比寄存器低字节
//        |             |  该位与PWM3H 搭配，配置由PG3输出的占空比数据
// ---------------------------------------------------------------------------

/************************* PIOCON0 – PWM 或 I/O选择寄存器 *************************/
// -------------------------------------------------------------------------------
// |   7    |   6    |   5     |   4     |   3     |   2     |   1     |   0     |
// |--------|--------|---------|---------|---------|---------|---------|---------|
// |   -    |   -    |  PIO05  |  PIO04  |  PIO03  |  PIO02  |  PIO01  |  PIO00  |
// |--------|--------|---------|---------|---------|---------|---------|---------|
// |   -    |   -    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// -------------------------------------------------------------------------------
// 地址：DEH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    5   |   PIO05   |  P0.3/PWM5管脚功能选择位
//        |           |  0 = P0.3/PWM5 管脚用作P0.3
//        |           |  1 = P0.3/PWM5 管脚用作PWM5输出
// -------|-----------|-----------------------------------------------------
//    4   |   PIO04   |  P0.1/PWM4管脚功能选择位
//        |           |  0 = P0.1/PWM4 管脚用作P0.1
//        |           |  1 = P0.1/PWM4 管脚用作PWM4输出
// -------|-----------|-----------------------------------------------------
//    3   |   PIO03   |  P0.0/PWM3管脚功能选择位
//        |           |  0 = P0.0/PWM3 管脚用作P0.0
//        |           |  1 = P0.0/PWM3 管脚用作PWM3输出
// -------|-----------|-----------------------------------------------------
//    2   |   PIO02   |  P1.0/PWM2管脚功能选择位
//        |           |  0 = P1.0/PWM2 管脚用作P1.0
//        |           |  1 = P1.0/PWM2 管脚用作PWM2输出
// -------|-----------|-----------------------------------------------------
//    1   |   PIO01   |  P1.1/PWM1管脚功能选择位
//        |           |  0 = P1.1/PWM1 管脚用作P1.1
//        |           |  1 = P1.1/PWM1 管脚用作PWM1输出
// -------|-----------|-----------------------------------------------------
//    0   |   PIO00   |  P1.2/PWM0管脚功能选择位
//        |           |  0 = P1.2/PWM0 管脚用作P1.2
//        |           |  1 = P1.2/PWM0 管脚用作PWM0输出
// -------------------------------------------------------------------------

/************************* PWMCON1 – PWM 控制寄存器 1 *************************/
// -----------------------------------------------------------------------------
// |   7    |   6    |   5    |    4     |    3     |   2    |   1    |   0    |
// |-----------------|--------|----------|----------|--------------------------|
// |   PWMMOD[1:0]   |   GP   |  PWMTYP  |  FBINEN  |       PWMDIV[2:0]        |
// |-----------------|--------|----------|----------|--------------------------|
// |      R/W        |  R/W   |   R/W    |   R/W    |           R/W            |
// -----------------------------------------------------------------------------
// 地址：DFH    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------------
//    Bit     |     Name      |  Description
// -----------|---------------|-----------------------------------------------------
//     7:6    |  PWMMOD[1:0]  |  
//            |               |  
// -----------|---------------|-----------------------------------------------------
//      5     |      GP       |  群组模式使能位
//            |               |  该位使能PWM群组模式。一旦使能，三对PWM的占空比由PWM01H
//            |               |   和PWM01L决定，原本配置的数据失效。
//            |               |  0 = 未组成群组模式
//            |               |  1 = 群组模式使能
// -----------|---------------|-----------------------------------------------------
//      4     |    PWMTYP     |  
//            |               |  
// -----------|---------------|-----------------------------------------------------
//      3     |    FBINEN     |  
//            |               |  
// -----------|---------------|-----------------------------------------------------
//     2:0    |  PWMDIV[2:0]  |  PWM 时钟除频
//            |               |  000 = 1/1
//            |               |  001 = 1/2
//            |               |  010 = 1/4
//            |               |  011 = 1/8
//            |               |  100 = 1/16
//            |               |  101 = 1/32
//            |               |  110 = 1/64
//            |               |  111 = 1/128
// ---------------------------------------------------------------------------------

/************************* A 或 ACC – 累加器 (可位寻址) *************************/
// ---------------------------------------------------------------------------------
// |   7     |   6     |   5     |   4     |   3     |   2     |   1     |   0     |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  ACC.7  |  ACC.6  |  ACC.5  |  ACC.4  |  ACC.3  |  ACC.2  |  ACC.1  |  ACC.0  |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// ---------------------------------------------------------------------------------
// 地址：E0H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |   Name      |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  ACC[7:0]   |  累加器
//        |             |  标准80C51 累加器
// ---------------------------------------------------------------------------

/************************* ADCCON1 – ADC控制寄存器1 *************************/
// ------------------------------------------------------------------------------
// |   7    |    6      |   5    |   4    |   3    |   2    |   1     |   0     |
// |--------|-----------|--------|--------|-----------------|---------|---------|
// |   -    |  STADCPX  |   -    |   -    |   ETGTYP[1:0]   |  ADCEX  |  ADCEN  |
// |--------|-----------|--------|--------|-----------------|---------|---------|
// |   -    |   R/W     |   -    |   -    |      R/W        |  R/W    |  R/W    |
// ------------------------------------------------------------------------------
// 地址：E1H    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |     Name      |  Description
// -------|---------------|-----------------------------------------------------
//    6   |    STADCPX    |  外部启动ADC触发脚选择
//        |               |  0 = 分配 STADC 到 P0.4
//        |               |  1 = 分配 STADC 到 P1.3
//        |               |  注意：一旦该位置位或清0，STADC脚会立即转换。
// -------|---------------|-----------------------------------------------------
//    6   |  ETGTYP[1:0]  |  外部触发信号类型选择
//        |               |  当 ADCEX (ADCCON1.1) 置1，该位决定响应外部触发的类型。
//        |               |  00 = PWM0/2/4 或 STADC 脚的下降沿
//        |               |  01 = PWM0/2/4 或 STADC 脚的上升沿
//        |               |  10 = 一个PWM周期的中点
//        |               |  11 = 一个PWM周期的终点
//        |               |  注PWM周期中点或终点触发仅适用于中心对齐模式的PWM输出。
// -------|---------------|-----------------------------------------------------
//    6   |    STADCPX    |  ADC 触发启动信号选择位
//        |               |  该位决定启动ADC的触发条件
//        |               |  0 = 当软件设定ADCS位，启动AD转换
//        |               |  1 = 当软件设定ADCS位或外部触发信号启动AD转换。外部触发
//        |               |  信号条件由寄存器ETGSEL[1:0] 及 ETGTYP[1:0]决定。注，
//        |               |  当ADCS为1时（正在转换），外部触发信号不会影响ADC直到
//        |               |  ADC转换结束，ADCS被硬件清0。
// -------|---------------|-----------------------------------------------------
//    6   |    STADCPX    |  ADC 使能位
//        |               |  0 = ADC 转换电路关闭
//        |               |  1 = ADC 转换电路打开
// -----------------------------------------------------------------------------

/************************* ADCCON2 – ADC控制寄存器 2 *************************/
// ---------------------------------------------------------------------------------------
// |    7     |    6      |    5      |    4     |   3    |   2    |   1    |     0      |
// |----------|-----------|-----------|----------|--------|--------|--------|------------|
// |  ADFBEN  |  ADCMPOP  |  ADCMPEN  |  ADCMPO  |   -    |   -    |   -    |  ADCDLY.8  |
// |----------|-----------|-----------|----------|--------|--------|--------|------------|
// |   R/W    |   R/W     |   R/W     |    R     |   -    |   -    |   -    |    R/W     |
// ---------------------------------------------------------------------------------------
// 地址：E2H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |  ADFBEN   |  ADC比较结果响应故障刹车使能寄存器
//        |           |  0 = 关闭
//        |           |  1 = ADC 触发故障刹车功能打开
//        |           |  当比较结果 ADCMPO 为1触发故障刹车模块。即符合PWM故障刹
//        |           |  车输出值后，硬件将清除 PWMRUN (PWMCON0.7) ，并终止PWM
//        |           |  输出。当PWMRUN置1，PWM重新输出。
// -------|-----------|-----------------------------------------------------
//    6   |  ADFBEN   |  ADC比较器输出极性选择位
//        |           |  0 = 若ADCR[11:0]大于或等于ADCMP[11:0].，ADCMPO 为 1
//        |           |  1 = 若ADCR[11:0]小于ADCMP[11:0]，ADCMPO 为 1
// -------|-----------|-----------------------------------------------------
//    5   |  ADFBEN   |  ADC 结果比较使能位
//        |           |  0 = ADC 结果比较功能关闭
//        |           |  1 = ADC 结果比较功能打开
// -------|-----------|-----------------------------------------------------
//    4   |  ADFBEN   |  ADC比较结果输出位
//        |           |  该位输出ACMPOP设定比较输出的结果。每次AD转换结束都会更
//        |           |  新输出。
// -------|-----------|-----------------------------------------------------
//    0   |  ADFBEN   |  ADC 外部触发延时计数器数值 第8位
//        |           |  详见 ADCDLY 寄存器描述
// -------------------------------------------------------------------------

/************************* ADCDLY –  ADC外部触发延迟计数器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                         ADCDLY[7:0]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：E3H    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |     Name      |  Description
// -------|---------------|-----------------------------------------------------
//   7:0  |  ADCDLY[7:0]  |  ADC 外部触发启动延迟计数器低位
//        |               |  该8位寄存器与ADCCON2.0组成9位计数器，用于在外部触发启动
//        |               |  ADC之前加入一段延迟。延迟计数结束再开始ADC转换
//        |               |  外部延迟时间 = ADCDLY / FADC
//        |               |  注，该延迟仅当 ADCEX (ADCCON1.1) 置1时有效。如果启用
//        |               |  PWM输出触发ADC功能，在PWM运行过程中不得更改ADCDLY计数值。
// -----------------------------------------------------------------------------

/************************* C0L – 捕获通道0低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          C0L[7:0]                                     |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：E4H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  C0L[7:0]  |  捕获通道0 输入结果低字节
//        |            |  寄存器C0L是16位捕获通道0输入结果的低字节值
// --------------------------------------------------------------------------

/************************* C0H – 捕获通道0高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          C0H[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：E5H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  C0H[7:0]  |  捕获通道0 输入结果高字节
//        |            |  寄存器C0H是16位捕获通道0输入结果的高字节值
// --------------------------------------------------------------------------

/************************* C1L – 捕获通道1低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          C1L[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：E6H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  C1L[7:0]  |  捕获通道1 输入结果低字节
//        |            |  寄存器C1L是16位捕获通道1输入结果的低字节值
// --------------------------------------------------------------------------

/************************* C1H – 捕获通道1高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          C1H[7:0]                                     |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：E7H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  C1H[7:0]  |  捕获通道1 输入结果高字节
//        |            |  寄存器C1H是16位捕获通道1输入结果的高字节值
// --------------------------------------------------------------------------

/************************* ADCCON0 – ADC控制寄存器0 (可位寻址) *************************/
// ---------------------------------------------------------------------------------------
// |   7    |   6    |    5      |    4      |    3     |    2     |    1     |    0     |
// |--------|--------|-----------|-----------|----------|----------|----------|----------|
// |  ADCF  |  ADCS  |  ETGSEL1  |  ETGSEL0  |  ADCHS3  |  ADCHS2  |  ADCHS1  |  ADCHS0  |
// |--------|--------|-----------|-----------|----------|----------|----------|----------|
// |  R/W   |  R/W   |   R/W     |   R/W     |   R/W    |   R/W    |   R/W    |   R/W    |
// ---------------------------------------------------------------------------------------
// 地址：E8H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------------
//   Bit  |   Name           |  Description
// -------|------------------|-----------------------------------------------------
//    7   |   ADCF           |  ADC标志位
//        |                  |  当AD转换完成，该位置1。可读取到当前AD转换结果。该位为1
//        |                  |  时无法开始新一轮转换，需要软件清零。
// -------|------------------|-----------------------------------------------------
//    6   |   ADCS           |  A/D 转换软件启动位
//        |                  |  该位置1启动AD转换。在AD转换过程中该位保持为1，当转换结束
//        |                  |  硬件自动清0。这意味着写入ADCS的值和读出的不一定相符
//        |                  |  写:
//        |                  |      0 = 无动作
//        |                  |      1 = 开始AD转换
//        |                  |  读:
//        |                  |      0 = ADC 模块空闲状态
//        |                  |      1 = ADC 模块工作中
// -------|------------------|-----------------------------------------------------
//  5:4   |   ETGSEL[1:0]    |  外部触发源选择
//        |                  |  当 ADCEX (ADCCON1.1) 为1，该位选择外部触发ADC的来源
//        |                  |  00 = PWM0
//        |                  |  01 = PWM2
//        |                  |  10 = PWM4
//        |                  |  11 = STADC 脚
// -------|------------------|-----------------------------------------------------
//  3:0   |   ADCHS[3:0]     |  A/D转换通道选择
//        |                  |  该位用于选择ADC转换通道。当ADCEN 为 0所有输入无效。
//        |                  |  0000 = AIN0
//        |                  |  0001 = AIN1
//        |                  |  0010 = AIN2
//        |                  |  0011 = AIN3
//        |                  |  0100 = AIN4
//        |                  |  0101 = AIN5
//        |                  |  0110 = AIN6
//        |                  |  0111 = AIN7
//        |                  |  1000 =内部带隙电压(band-gap)1.22V
//        |                  |  Others = 保留
// --------------------------------------------------------------------------------

/************************* PICON – 管脚中断控制寄存器 *************************/
// ---------------------------------------------------------------------------
// |   7     |   6     |   5    |   4    |   3    |   2    |   1    |   0    |
// |---------|---------|--------|--------|--------|--------|-----------------|
// |  PIT67  |  PIT45  |  PIT3  |  PIT2  |  PIT1  |  PIT0  |    PIPS[1:0]    |
// |---------|---------|--------|--------|--------|--------|-----------------|
// |  R/W    |  R/W    |  R/W   |  R/W   |  R/W   |  R/W   |      R/W        |
// ---------------------------------------------------------------------------
// 地址：E9H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |    Name     |  Description
// -------|-------------|-----------------------------------------------------
//    7   |    PIT67    |  管脚中断通道6 及 7 类型选择
//        |             |  该位用以配置管脚中断6和7产生中断的信号类型
//        |             |  0 = 电平触发
//        |             |  1 = 边沿触发
// -------|-------------|-----------------------------------------------------
//    6   |    PIT45    |  管脚中断通道4 及 5 类型选择
//        |             |  该位用以配置管脚中断4和5产生中断的信号类型
//        |             |  0 = 电平触发
//        |             |  1 = 边沿触发
// -------|-------------|-----------------------------------------------------
//    5   |    PIT3     |  管脚中断通道3 类型选择
//        |             |  该位用以配置管脚中断3产生中断的信号类型
//        |             |  0 = 电平触发
//        |             |  1 = 边沿触发
// -------|-------------|-----------------------------------------------------
//    4   |    PIT2     |  管脚中断通道2 类型选择
//        |             |  该位用以配置管脚中断2产生中断的信号类型
//        |             |  0 = 电平触发
//        |             |  1 = 边沿触发
// -------|-------------|-----------------------------------------------------
//    3   |    PIT1     |  管脚中断通道1 类型选择
//        |             |  该位用以配置管脚中断1产生中断的信号类型
//        |             |  0 = 电平触发
//        |             |  1 = 边沿触发
// -------|-------------|-----------------------------------------------------
//    2   |    PIT0     |  管脚中断通道0 类型选择
//        |             |  该位用以配置管脚中断0产生中断的信号类型
//        |             |  0 = 电平触发
//        |             |  1 = 边沿触发
// -------|-------------|-----------------------------------------------------
//   1:0  |  PIPS[1:0]  |  管脚中断端口选择
//        |             |  该位段选择管脚中断所用8位端口
//        |             |  00 = 端口0
//        |             |  01 = 端口1
//        |             |  10 = 端口2
//        |             |  11 = 端口3
// ---------------------------------------------------------------------------

/************************* PINEN – 管脚中断反相特性使能 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  PINEN7  |  PINEN6  |  PINEN5  |  PINEN4  |  PINEN3  |  PINEN2  |  PINEN1  |  PINEN0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：EAH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  PINENn   |  通道n管脚中断反相特性选择使能位
//        |           |  该位用以使能低电平/下降沿触发中断。至于是电平还是边沿，
//        |           |  由PICON寄存器的PITn位决定
//        |           |  0 = 关闭中断
//        |           |  1 = 低电平/下降沿触发
// -------------------------------------------------------------------------

/************************* PIPEN – 管脚触发正相特性使能 *************************/
// -----------------------------------------------------------------------------------------
// |    7     |    6     |    5     |    4     |    3     |    2     |    1     |    0     |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |  PIPEN7  |  PIPEN6  |  PIPEN5  |  PIPEN4  |  PIPEN3  |  PIPEN2  |  PIPEN1  |  PIPEN0  |
// |----------|----------|----------|----------|----------|----------|----------|----------|
// |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |   R/W    |
// -----------------------------------------------------------------------------------------
// 地址：EBH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  PIPENn   |  管脚中断正相特性选择使能位
//        |           |  该位用以使能高电平/上升沿触发中断。至于是电平还是边沿，
//        |           |  由PICON寄存器的PITn位决定
//        |           |  0 = 关闭中断
//        |           |  1 = 高电平/上升沿触发
// -------------------------------------------------------------------------

/************************* PIF – 管脚中断标志寄存器 *************************/
// -------------------------------------------------------------------------------------------------
// |    7      |    6      |    5      |    4      |    3      |    2      |    1      |    0      |
// |-----------|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
// |   PIF7    |   PIF6    |   PIF7    |   PIF4    |   PIF3    |   PIF2    |   PIF1    |   PIF0    |
// |-----------|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
// | R(level)  | R(level)  | R(level)  | R(level)  | R(level)  | R(level)  | R(level)  | R(level)  |
// | R/W(edge) | R/W(edge) | R/W(edge) | R/W(edge) | R/W(edge) | R/W(edge) | R/W(edge) | R/W(edge) |
// -------------------------------------------------------------------------------------------------
// 地址：ECH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |   PIFn    |  通道n管脚中断标志位
//        |           |  如果选择边沿触发有效，当通道的产生边沿跳变信号进入中断，
//        |           |  该标志置1，需要由软件清除。
//        |           |  如果选择电平触发有效，该标志根据管脚上对应的电平变换，
//        |           |  软件无法控制该位。
// -------------------------------------------------------------------------

/************************* C2L – 捕获通道2低字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          C2L[7:0]                                     |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：EDH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  C2L[7:0]  |  捕获通道2 输入结果低字节
//        |            |  寄存器C2L是16位捕获通道2输入结果的低字节值
// --------------------------------------------------------------------------

/************************* C2H – 捕获通道2高字节 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          C2H[7:0]                                     |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：EEH    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//   7:0  |  C2H[7:0]  |  捕获通道2 输入结果高字节
//        |            |  寄存器C2H是16位捕获通道2输入结果的高字节值
// --------------------------------------------------------------------------

/************************* EIP – 扩展中断优先级寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  PT2   |  PSPI  |  PFB   |  PWDT  |  PPWM  |  PCAP  |  PPI   |  PI2C  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：EFH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |    PT2    |  定时器2中断优先级低位
// -------|-----------|-----------------------------------------------------
//    6   |    PSPI   |  SPI中断优先级低位
// -------|-----------|-----------------------------------------------------
//    5   |    PFB    |  故障刹车中断优先级低位
// -------|-----------|-----------------------------------------------------
//    4   |    PWDT   |  WDT中断优先级低位
// -------|-----------|-----------------------------------------------------
//    3   |    PPWM   |  PWM中断优先级低位
// -------|-----------|-----------------------------------------------------
//    2   |    PCAP   |  定时器输入捕获中断优先级低位
// -------|-----------|-----------------------------------------------------
//    1   |    PPI    |  引脚中断优先级低位
// -------|-----------|-----------------------------------------------------
//    0   |    PI2C   |  I2C中断优先级低位
// -------------------------------------------------------------------------
// EIP使用时结合EIPH一起决定每个中断源的优先级的。

/************************* B – B 寄存器 (可位寻址) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  B.7   |  B.6   |  B.5   |  B.4   |  B.3   |  B.2   |  B.1   |  B.0   |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：F0H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |   B[7:0]  |  B 寄存器
//        |           |  标准80C51 B累加器，常用乘法除法指令
// -------------------------------------------------------------------------

/************************* CAPCON3 – 输入捕获控制寄存器3 *************************/
// ---------------------------------------------------------------------------------
// |   7     |   6     |   5     |   4     |   3     |   2     |   1     |   0     |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  CAP13  |  CAP12  |  CAP11  |  CAP10  |  CAP03  |  CAP02  |  CAP01  |  CAP00  |
// |---------|---------|---------|---------|---------|---------|---------|---------|
// |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// ---------------------------------------------------------------------------------
// 地址：F1H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |    Name     |  Description
// -------|-------------|-----------------------------------------------------
//   7:4  |  CAP1[3:0]  |  输入捕获通道1输入引脚选择
//        |             |  0000 = P1.2/IC0
//        |             |  0001 = P1.1/IC1
//        |             |  0010 = P1.0/IC2
//        |             |  0011 = P0.0/IC3
//        |             |  0100 = P0.4/IC3
//        |             |  0101 = P0.1/IC4
//        |             |  0110 = P0.3/IC5
//        |             |  0111 = P0.5/IC6
//        |             |  1000 = P1.5/IC7
//        |             |  其它 = P1.2/IC0
// -------|-------------|-----------------------------------------------------
//   3:0  |  CAP0[3:0]  |  输入捕获通道0输入引脚选择
//        |             |  0000 = P1.2/IC0
//        |             |  0001 = P1.1/IC1
//        |             |  0010 = P1.0/IC2
//        |             |  0011 = P0.0/IC3
//        |             |  0100 = P0.4/IC3
//        |             |  0101 = P0.1/IC4
//        |             |  0110 = P0.3/IC5
//        |             |  0111 = P0.5/IC6
//        |             |  1000 = P1.5/IC7
//        |             |  其它 = P1.2/IC0
// ---------------------------------------------------------------------------

/************************* CAPCON4 – 输入捕获控制寄存器4 *************************/
// -----------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3     |   2     |   1     |   0     |
// |--------|--------|--------|--------|---------|---------|---------|---------|
// |   -    |   -    |   -    |   -    |  CAP23  |  CAP22  |  CAP21  |  CAP20  |
// |--------|--------|--------|--------|---------|---------|---------|---------|
// |   -    |   -    |   -    |   -    |  R/W    |  R/W    |  R/W    |  R/W    |
// -----------------------------------------------------------------------------
// 地址：F2H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |    Name     |  Description
// -------|-------------|-----------------------------------------------------
//   3:0  |  CAP2[3:0]  |  输入捕获通道2输入引脚选择
//        |             |  0000 = P1.2/IC0
//        |             |  0001 = P1.1/IC1
//        |             |  0010 = P1.0/IC2
//        |             |  0011 = P0.0/IC3
//        |             |  0100 = P0.4/IC3
//        |             |  0101 = P0.1/IC4
//        |             |  0110 = P0.3/IC5
//        |             |  0111 = P0.5/IC6
//        |             |  1000 = P1.5/IC7
//        |             |  其它 = P1.2/IC0
// ---------------------------------------------------------------------------

/************************* SPCR –  SPI控制寄存器 *************************/
// ---------------------------------------------------------------------------
// |   7    |   6     |   5     |   4    |   3    |   2    |   1    |   0    |
// |--------|---------|---------|--------|--------|--------|--------|--------|
// |  SSOE  |  SPIEN  |  LSBFE  |  MSTR  |  CPOL  |  CPHA  |  SPR1  |  SPR0  |
// |--------|---------|---------|--------|--------|--------|--------|--------|
// |  R/W   |  R/W    |  R/W    |  R/W   |  R/W   |  R/W   |  R/W   |  R/W   |
// ---------------------------------------------------------------------------
// 地址：F3H, 页：0    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|---------------------------------------------------------
//    7   |   SSOE    |  从机选择输出使能位
//        |           |  该位搭配DISMODF (SPSR.3) 用于定义管脚，该位仅在MSTR=1
//        |           |  和DISMODF=1的条件下有效。
//        |           |  0 = SS# 作为普通 I/O
//        |           |  1 = SS# 选择外部从机驱动，自动拉低 ，总线进入空闲模式时变高
// -------|-----------|---------------------------------------------------------
//    6   |   SPIEN   |  SPI使能
//        |           |  0 = 关闭SPI功能
//        |           |  1 = 打开SPI功能
// -------|-----------|---------------------------------------------------------
//    5   |   LSBFE   |  LSB 优先使能
//        |           |  0 = SPI 优先传输最高位MSB数据
//        |           |  1 = SPI 优先传输最低位LSB数据
// -------|-----------|---------------------------------------------------------
//    4   |   MSTR    |  使能主机模式
//        |           |  该位用于切换SPI工作于主机与从机模式
//        |           |  0 = SPI 配置为从机模式
//        |           |  1 = SPI 配置为主机模式
// -------|-----------|---------------------------------------------------------
//    3   |   CPOL    |  SPI 时钟极性选择
//        |           |  CPOL位定义在SPI总线在空闲模式时钟脚的电平状态。
//        |           |  0 = SPI时钟在空闲模式时低电平
//        |           |  1 = SPI时钟在空闲模式时高电平
// -------|-----------|---------------------------------------------------------
//    2   |   CPHA    |  SPI 时钟相位选择
//        |           |  CPHA 位定义在采样所用时钟边沿。
//        |           |  0 = SPI在时钟第一个边沿采样数据
//        |           |  1 = SPI在时钟第二个边沿采样数据
// -------|-----------|---------------------------------------------------------
//    1   |   SPR1    |  
// -------|-----------|---------------------------------------------------------
//    0   |   SPR0    |  
// -----------------------------------------------------------------------------

/************************* SPCR2 – SPI控制寄存器2 *************************/
// ---------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1     |   0     |
// |--------|--------|--------|--------|--------|--------|---------|---------|
// |   -    |   -    |   -    |   -    |   -    |   -    |  SPIS1  |  SPIS0  |
// |--------|--------|--------|--------|--------|--------|---------|---------|
// |   -    |   -    |   -    |   -    |   -    |   -    |  R/W    |  R/W    |
// ---------------------------------------------------------------------------
// 地址：F3H, 页：1    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |    Name     |  Description
// -------|-------------|-----------------------------------------------------
//   1:0  |  SPIS[1:0]  |  SPI在相邻字节之间的间隔时间选择
//        |             |  SPIS[1:0] 和CPHA 搭配确定SPI在相邻字节之间的间隔时间选
//        |             |  择，如下：
//        |             |  CPHA  SPIS1  SPIS0  SPI clock 
//        |             |   0     0      0      0.5 
//        |             |   0     0      1      1.0 
//        |             |   0     1      0      1.5 
//        |             |   0     1      1      2.0 
//        |             |   1     0      0      1.0 
//        |             |   1     0      1      1.5 
//        |             |   1     1      0      2.0 
//        |             |   1     1      1      2.5 
//        |             |  SPIS[1:0]只在主机模式有效 (MSTR = 1)。
// ---------------------------------------------------------------------------

/************************* SPSR – SPI 状态寄存器 *************************/
// -------------------------------------------------------------------------------
// |   7    |   6    |    5     |   4    |    3      |   2     |   1    |   0    |
// |--------|--------|----------|--------|-----------|---------|--------|--------|
// |  SPIF  |  WCOL  |  SPIOVF  |  MODF  |  DISMODF  |  TXBUF  |   -    |   -    |
// |--------|--------|----------|--------|-----------|---------|--------|--------|
// |  R/W   |  R/W   |   R/W    |  R/W   |   R/W     |  R/W    |   -    |   -    |
// -------------------------------------------------------------------------------
// 地址：F4H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |   SPIF    |  SPI传输完成标志
//        |           |  在SPI数据传输完成或接收到的数据移入到SPI读缓冲时，该位
//        |           |  通过硬件设置为1。
//        |           |  如果使能 ESPI (EIE .6) 和 EA, SPI中断请求. 该位必须由
//        |           |  软件清零. 如果SPIF置1，禁止向SPDR写入
// -------|-----------|-----------------------------------------------------
//    6   |   WCOL    |  写冲突位
//        |           |  该位表示写冲突事件. 一旦发生写冲突事件，该位被置位，必
//        |           |  须通过软件清零。
// -------|-----------|-----------------------------------------------------
//    5   |  SPIOVF   |  SPI 溢出标志
//        |           |  该位表示溢出事件，一旦发生溢出，该位置位，如果使能ESPI 
//        |           |  和 EA, SPI请求中断。该位必须由软件清零
// -------|-----------|-----------------------------------------------------
//    4   |   MODF    |  模式错误中断状态标志
//        |           |  该位表示模式错误事件。如果 SS# 配置成模式错误输入
//        |           |  (MSTR=1且DISMODF=0) 和SS# 被外部器件拉低, 产生模式错误，
//        |           |   MODF将被置1。 如果使能 ESPI 和 EA, SPI中断请求。 
//        |           |  该位必须由软件清零
// -------|-----------|-----------------------------------------------------
//    3   |  DISMODF  |  禁止模式错误检测
//        |           |  该位结合SSOE(SPCR.7) 位用于决定 SS# 的特征。 DISMODF
//        |           |  仅在主机模式下有效(MSTR = 1)。
//        |           |  0 = 使能模式错误检测。 SS# 为模式错误检测的输入脚，
//        |           |      不管SSOE
//        |           |  1 = 禁止模式错误检测。 SS# 的特征依赖SSOE 位
// -------|-----------|-----------------------------------------------------
//    2   |   TXBUF   |  SPI 写缓冲区状态
//        |           |  该位用于标示SPI 写缓冲区（writer data buffer）的状态
//        |           |  0 = 缓冲区内数据全空
//        |           |  1 = 缓冲区内有数据
// -------------------------------------------------------------------------

/************************* SPDR – SPI 数据寄存器 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                          SPDR[7:0]                                    |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：F5H    复位值：0000 0000b
// 
// ---------------------------------------------------------------------------
//   Bit  |    Name     |  Description
// -------|-------------|-----------------------------------------------------
//   7:0  |  SPDR[7:0]  |  串行外设数据寄存器
//        |             |  该字节为SPI总线上传输或接收的数据。对该字节执行写入，是
//        |             |  对移位寄存器写操作。读取这个字节，实际上是从一个缓冲区读
//        |             |  取数据。在主机模式，读该寄存器，初始化同时传输和接收一
//        |             |  个字节。
// ---------------------------------------------------------------------------

/************************* AINDIDS – ADC 信道数字输入功能关闭 *************************/
// -------------------------------------------------------------------------------------------------
// |    7      |    6      |    5      |    4      |    3      |    2      |    1      |    0      |
// |-----------|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
// |  P11DIDS  |  P03DIDS  |  P04DIDS  |  P05DIDS  |  P06DIDS  |  P07DIDS  |  P30DIDS  |  P17DIDS  |
// |-----------|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
// |   R/W     |   R/W     |   R/W     |   R/W     |   R/W     |   R/W     |   R/W     |   R/W     |
// -------------------------------------------------------------------------------------------------
// 地址：F6H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   7:0  |  PnnDIDS  |  ADC 信道数字输入功能关闭
//        |           |  0 = ADC 信道n数字输入功能打开
//        |           |  1 = ADC 信道n数字输入功能关闭。ADC通道n读取始终为0
// -------------------------------------------------------------------------

/************************* EIPH – 扩展中断优先级高位寄存器 *************************/
// ------------------------------------------------------------------------------
// |   7    |   6     |   5    |   4     |   3     |   2     |   1    |   0     |
// |--------|---------|--------|---------|---------|---------|--------|---------|
// |  PT2H  |  PSPIH  |  PFBH  |  PWDTH  |  PPWMH  |  PCAPH  |  PPIH  |  PI2CH  |
// |--------|---------|--------|---------|---------|---------|--------|---------|
// |  R/W   |  R/W    |  R/W   |  R/W    |  R/W    |  R/W    |  R/W   |  R/W    |
// ------------------------------------------------------------------------------
// 地址：F7H    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    7   |   PT2H    |  定时器2中断优先级高位
// -------|-----------|-----------------------------------------------------
//    6   |   PSPIH   |  SPI中断优先级高位
// -------|-----------|-----------------------------------------------------
//    5   |   PFBH    |  故障刹车中断优先级高位
// -------|-----------|-----------------------------------------------------
//    4   |   PWDTH   |  WDT中断优先级高位
// -------|-----------|-----------------------------------------------------
//    3   |   PPWMH   |  PWM中断优先级高位
// -------|-----------|-----------------------------------------------------
//    2   |   PCAPH   |  定时器输入捕获中断优先级高位
// -------|-----------|-----------------------------------------------------
//    1   |   PPIH    |  引脚中断优先级高位
// -------|-----------|-----------------------------------------------------
//    0   |   PI2CH   |  I2C中断优先级高位
// -------------------------------------------------------------------------
// EIPH使用时结合EIP一起决定每个中断源的优先级的。


/************************* SCON_1 – 串口1控制寄存器  (可位寻址) *************************/
// ------------------------------------------------------------------------------------
// |      7       |   6     |   5     |   4     |   3     |   2     |   1    |   0    |
// |--------------|---------|---------|---------|---------|---------|--------|--------|
// |  SM0_1/FE_1  |  SM1_1  |  SM2_1  |  REN_1  |  TB8_1  |  RB8_1  |  TI_1  |  RI_1  |
// |--------------|---------|---------|---------|---------|---------|--------|--------|
// |     R/W      |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W   |  R/W   |
// ------------------------------------------------------------------------------------
// 地址：F8H    复位值：0000 0000b
// 
// ----------------------------------------------------------------------------
//   Bit  |    Name      |  Description
// -------|--------------|-----------------------------------------------------
//    7   |  SM0_1/FE_1  |  串口1模式选择
// -------|--------------|  SMOD0_1 (T3CON.6) = 0:
//    6   |    SM1_1     |  
//        |              |  SMOD0_1 (T3CON.6) = 1:
//        |              |  SM0_1/FE_1用于标示帧错误 (FE) 状态位。由软件清除。
//        |              |      0 = 没有帧错误 (FE)
//        |              |      1 = 检测到帧错误 (FE)
// -------|--------------|-----------------------------------------------------
//    5   |    SM2_1     |  串口1处理通讯模式选择
//        |              |  该位功能取决于串口1模式
//        |              |  模式0:
//        |              |       无效果
//        |              |  模式1:
//        |              |  该位检查有效停止位。
//        |              |       0 = 接收有效不管停止位是否有逻辑电平
//        |              |       1 = 当接收到的数据帧停止位为1，且接收地址与本机地
//        |              |           址匹配或接收到的为广播地址时，接收数据有效
//        |              |  模式2 或 3:
//        |              |  对于多机通信
//        |              |       0 = 接收有效不管第9位是否有逻辑电平
//        |              |       1 = 当接收到的数据帧第9位为1，且接收地址与本机地址
//        |              |           匹配或接收到的为广播地址时，接收数据有效
// -------|--------------|-----------------------------------------------------
//    4   |    REN_1     |  串口1接收使能
//        |              |  0 = 关闭串口1接收功能
//        |              |  1 = 打开串口1在模式1，2或3模式下的接收功能
//        |              |      模式0下，打开接收，需配置REN_1=1及RI_1=0
// -------|--------------|-----------------------------------------------------
//    3   |    TB8_1     |  串口1第9位发送位
//        |              |  串口1在模式2和3中要被发送的第九位数据。在模式0和1中，不
//        |              |  支持该功能
// -------|--------------|-----------------------------------------------------
//    2   |    RB8_1     |  串口1第9位接收位
//        |              |  串口1在模式2或3中接收到的第九位数据。模式1下，若SM2_1 =
//        |              |   0则RB8_1是接收到的停止位。模式0下该位无意义
// -------|--------------|-----------------------------------------------------
//    1   |     TI_1     |  串口1发送中断标志位
//        |              |  发送中断标志：模式0下该标志由硬件在发送完8位数据后置1，
//        |              |  而在其它模式下，串行发送到最后一位数据时置位。当该位中断
//        |              |  使能，发生中断后会转至中断子程序。该位必须由软件来清除。
// -------|--------------|-----------------------------------------------------
//    0   |     RI_1     |  串口1接收中断标志
//        |              |  模式0下该标志由硬件置位，当串口发生帧错误接收到第8位，
//        |              |  该位置位；模式1，2或3中接收到停止位(stop bit)，使该位置
//        |              |  位。当SM2_1被限制的情况例外。当串口1中断使能，该位置位会
//        |              |  转跳到中断子程序运行。该位必须由软件来清除
// ----------------------------------------------------------------------------

/************************* PDTEN – PWM 死区使能寄存器(TA 保护) *************************/
// --------------------------------------------------------------------------------------
// |   7    |   6    |   5    |     4      |   3    |    2      |    1      |    0      |
// |--------|--------|--------|------------|--------|-----------|-----------|-----------|
// |   -    |   -    |   -    |  PDTCNT.8  |   -    |  PDT45EN  |  PDT23EN  |  PDT01EN  |
// |--------|--------|--------|------------|--------|-----------|-----------|-----------|
// |   -    |   -    |   -    |    R/W     |   -    |   R/W     |   R/W     |   R/W     |
// --------------------------------------------------------------------------------------
// 地址：F9H    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |   Name     |  Description
// -------|------------|-----------------------------------------------------
//    4   |  PDTCNT.8  |  PWM 8位死区时间计数器
//        |            |  详见 PDTCNT 寄存器
// -------|------------|-----------------------------------------------------
//    2   |  PDT45EN   |  PWM4/5 死区时间使能位
//        |            |  仅当PWM4/5配置位互补模式，死区功能才会生效。
//        |            |  0 = GP4/GP5信号无延时
//        |            |  1 = 在GP4/GP5信号上升沿加入死区时间延时
// -------|------------|-----------------------------------------------------
//    1   |  PDT23EN   |  PWM2/3 死区时间使能位
//        |            |  仅当PWM2/3配置位互补模式，死区功能才会生效。
//        |            |  0 = GP2/GP3信号无延时
//        |            |  1 = 在GP2/GP3信号上升沿加入死区时间延时
// -------|------------|-----------------------------------------------------
//    0   |  PDT01EN   |  PWM0/1 死区时间使能位
//        |            |  仅当PWM0/1配置位互补模式，死区功能才会生效。
//        |            |  0 = GP0/GP1信号无延时
//        |            |  1 = 在GP0/GP1信号上升沿加入死区时间延时
// --------------------------------------------------------------------------

/************************* PDTCNT – PWM 死区时间计数器(TA 保护) *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |-----------------------------------------------------------------------|
// |                         PDTCNT[7:0]                                   |
// |-----------------------------------------------------------------------|
// |                                W/R                                    |
// -------------------------------------------------------------------------
// 地址：FAH    复位值：0000 0000b
// 
// -----------------------------------------------------------------------------
//   Bit  |     Name      |  Description
// -------|---------------|-----------------------------------------------------
//   7:0  |  PDTCNT[7:0]  |  PWM 死区时间计数器低字节
//        |               |  该8位寄存器与PDTEN.4 组成9位PWM死区时间计数器PDTCNT。
//        |               |  该计数器仅当PWM设定位互补模式，且有效死区使能位已设置时
//        |               |  有效。
//        |               |  PWM 死区时间 = (PDTCNT + 1) / FSYS
//        |               |  注在PWM运行过程中，请勿更改PDTCNT的值
// -----------------------------------------------------------------------------

/************************* PMEN – PWM 输出掩码控制 *************************/
// -------------------------------------------------------------------------------
// |   7    |   6    |   5     |   4     |   3     |   2     |   1     |   0     |
// |--------|--------|---------|---------|---------|---------|---------|---------|
// |   -    |   -    |  PMEN5  |  PMEN4  |  PMEN3  |  PMEN2  |  PMEN1  |  PMEN0  |
// |--------|--------|---------|---------|---------|---------|---------|---------|
// |   -    |   -    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// -------------------------------------------------------------------------------
// 地址：FBH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   5:0  |   PMENn   |  PWMn 输出掩码使能位
//        |           |  0 = PWMn 信号输出
//        |           |  1 = PWMn 根据PMDn设定的电位值掩码
// -------------------------------------------------------------------------

/************************* PMD – PWM 掩码数据寄存器 *************************/
// -------------------------------------------------------------------------------
// |   7    |   6    |   5     |   4     |   3     |   2     |   1     |   0     |
// |--------|--------|---------|---------|---------|---------|---------|---------|
// |   -    |   -    |  PMD5   |  PMD4   |  PMD3   |  PMD2   |  PMD1   |  PMD0   |
// |--------|--------|---------|---------|---------|---------|---------|---------|
// |   -    |   -    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |  R/W    |
// -------------------------------------------------------------------------------
// 地址：FCH    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//   5:0  |   PMDn    |  PWMn 掩码数据寄存器
//        |           |  一旦相应的PMENn 被设置，PWMn 信号输出掩码电准位值
//        |           |  0 = PWMn 掩码，输出低电平
//        |           |  1 = PWMn 掩码，输出高电平
// -------------------------------------------------------------------------

/************************* EIP1 – 扩展中断优先级寄存器1 *************************/
// -------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2    |   1    |   0    |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |   -    |   -    |   -    |   -    |  PWKT  |  PT3   |  PS_1  |
// |--------|--------|--------|--------|--------|--------|--------|--------|
// |   -    |   -    |   -    |   -    |   -    |  R/W   |  R/W   |  R/W   |
// -------------------------------------------------------------------------
// 地址：FEH, 页: 0    复位值：0000 0000b
// 
// -------------------------------------------------------------------------
//   Bit  |   Name    |  Description
// -------|-----------|-----------------------------------------------------
//    2   |   PWKT    |  WKT 中断优先级低位
// -------|-----------|-----------------------------------------------------
//    1   |   PT3     |  定时器3 中断优先级低位
// -------|-----------|-----------------------------------------------------
//    0   |   PS_1    |  串口1 中断优先级低位
// -------------------------------------------------------------------------
// EIP1使用时结合EIPH1一起决定每个中断源的优先级的。

/************************* EIPH1 – 扩展中断优先级高位寄存器1 *************************/
// ----------------------------------------------------------------------------
// |   7    |   6    |   5    |   4    |   3    |   2     |   1     |   0     |
// |--------|--------|--------|--------|--------|---------|---------|---------|
// |   -    |   -    |   -    |   -    |   -    |  PWKTH  |  PT3H   |  PSH_1  |
// |--------|--------|--------|--------|--------|---------|---------|---------|
// |   -    |   -    |   -    |   -    |   -    |  R/W    |  R/W    |  R/W    |
// ----------------------------------------------------------------------------
// 地址：FFH, 页: 0    复位值：0000 0000b
// 
// --------------------------------------------------------------------------
//   Bit  |    Name    |  Description
// -------|------------|-----------------------------------------------------
//    2   |   PWKTH    |  WKT 中断优先级高位
// -------|------------|-----------------------------------------------------
//    1   |   PT3H     |  定时器3 中断优先级高位
// -------|------------|-----------------------------------------------------
//    0   |   PSH_1    |  串口1 中断优先级高位
// --------------------------------------------------------------------------
// EIPH1使用时结合EIP1一起决定每个中断源的优先级的。

/********************************************************************************************************************************************************************************************************/
